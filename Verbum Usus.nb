(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    221119,       4579]
NotebookOptionsPosition[    219663,       4526]
NotebookOutlinePosition[    220009,       4541]
CellTagsIndexPosition[    219966,       4538]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Verbum Usus", "Title",
 CellChangeTimes->{{3.608989107835307*^9, 3.6089891100695305`*^9}}],

Cell["\<\
By Brian Carlson and Logan Houchens\
\>", "Text",
 CellChangeTimes->{{3.6090447818131337`*^9, 3.609044790305134*^9}}],

Cell[CellGroupData[{

Cell["Helper Functions (4)", "Section",
 CellChangeTimes->{{3.6089892236048827`*^9, 3.6089892260221243`*^9}, {
  3.6090519886745267`*^9, 3.609051989856645*^9}}],

Cell["\<\
These functions were made to help with general topics, not specfic to our \
project, but needed.\
\>", "Text",
 CellChangeTimes->{{3.609010869067321*^9, 3.6090110143973207`*^9}, {
  3.6090112121243205`*^9, 3.609011214166321*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Returns", " ", "a", " ", "list", " ", "of", " ", "items", " ", "from", 
     " ", "the", " ", "parameter", " ", "\"\<list\>\"", " ", "that", " ", 
     "match", " ", "the", " ", "form", " ", "\"\<item\>\""}], "\[Rule]", 
    "_"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"select", "[", 
     RowBox[{"list_", ",", "item_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"list", ",", 
          RowBox[{
           RowBox[{"MatchQ", "[", 
            RowBox[{"#", ",", 
             RowBox[{"item", "\[Rule]", "_"}]}], "]"}], "&"}]}], "]"}], 
        "\[Equal]", 
        RowBox[{"{", "}"}]}], ")"}], ",", 
      RowBox[{"item", "\[Rule]", " ", 
       RowBox[{"{", "\"\<Not Listed\>\"", "}"}]}], ",", 
      RowBox[{"Select", "[", 
       RowBox[{"list", ",", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"item", "\[Rule]", "_"}]}], "]"}], "&"}]}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Returns", " ", "a", " ", "string", " ", "if", " ", "the", " ", "object",
       " ", "given", " ", "is", " ", "a", " ", "list"}], ",", " ", 
     RowBox[{"returns", " ", "the", " ", "object", " ", "otherwise"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stringForm", "[", "object_", "]"}], ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ListQ", "[", "object", "]"}], ",", 
      RowBox[{"object", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "object"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Returns", " ", "true", " ", "if", " ", "\"\<term\>\"", " ", "exists", 
      " ", "in", " ", "\"\<list\>\""}], ",", " ", 
     RowBox[{"false", " ", "if", " ", 
      RowBox[{"otherwise", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"existsQ", "[", 
     RowBox[{"list_", ",", "term_"}], "]"}], ":=", 
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"list", ",", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"#", ",", "term"}], "]"}], "&"}]}], "]"}], "\[Equal]", 
       RowBox[{"{", "}"}]}], ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Returns", " ", "a", " ", "transposed", " ", "list"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"connect", "[", "lists_", "]"}], ":=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"lists", "[", 
       RowBox[{"[", 
        RowBox[{"j", ",", "i"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"lists", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Length", "[", "lists", "]"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.608989789494176*^9, 3.6089898770252275`*^9}, {
  3.608990121246648*^9, 3.6089901239379168`*^9}, {3.608990257746296*^9, 
  3.608990286878209*^9}, {3.6089904421813264`*^9, 3.6089904889213266`*^9}, {
  3.6089908592193265`*^9, 3.6089908727413263`*^9}, {3.6089909272782516`*^9, 
  3.6089909785393777`*^9}, {3.6089910609096136`*^9, 3.608991088985421*^9}, {
  3.608991291153636*^9, 3.6089913436628866`*^9}, {3.6089914003125505`*^9, 
  3.608991419359455*^9}, {3.6089916867061872`*^9, 3.6089917292414403`*^9}, {
  3.6089919539169054`*^9, 3.6089919554360576`*^9}, {3.608994561487768*^9, 
  3.608994566789768*^9}, {3.6090101528533206`*^9, 3.6090101749443207`*^9}, {
  3.6090109729203205`*^9, 3.6090109749223204`*^9}, {3.609020068944236*^9, 
  3.6090200712969413`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Accessing Social Media Data (6)\
\>", "Section",
 CellChangeTimes->{{3.608991742823798*^9, 3.6089917499235086`*^9}, {
  3.608991870199535*^9, 3.608991870992614*^9}, {3.6090520436590247`*^9, 
  3.6090520448211412`*^9}}],

Cell[TextData[{
 "Some of these functions are the ones that directly call \
\[OpenCurlyDoubleQuote]SocialMediaData\[CloseCurlyDoubleQuote], they are \
prefixed with \[OpenCurlyDoubleQuote]get\[CloseCurlyDoubleQuote] followed by \
the data that the function accesses through \
\[OpenCurlyDoubleQuote]SocialMediaData\[CloseCurlyDoubleQuote]. Some \
functions listed here are functions that return true or false based on \
criteria we\[CloseCurlyQuote]ve previously chosen.\[LineSeparator]\
\[LineSeparator]Some key terms for this section and our definitions for them \
are:\n\n",
 StyleBox["valid status",
  FontVariations->{"Underline"->True}],
 "- officially termed a \[OpenCurlyDoubleQuote]status update\
\[CloseCurlyDoubleQuote] by Facebook, a valid status for this project is \
defined as a post that is solely words with no other media content and a post \
that can, and has been, commented on. \n\[LineSeparator]",
 StyleBox["valid profile",
  FontVariations->{"Underline"->True}],
 "- a social media account that is both public and has at least one ",
 StyleBox["valid status",
  FontVariations->{"Underline"->True}],
 ".  "
}], "Text",
 CellChangeTimes->{{3.609025263099377*^9, 3.609025654243377*^9}, {
  3.609025690623377*^9, 3.6090256920113773`*^9}, {3.609025758059377*^9, 
  3.609025825126377*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "A", " ", "function", " ", "created", " ", "mostly", " ", "for", " ", 
     "testing", " ", "purposes"}], ",", " ", 
    RowBox[{
    "typing", " ", "in", " ", "a", " ", "name", " ", "as", " ", "it", " ", 
     "is", " ", "on", " ", "the", " ", "social", " ", "media", " ", "account",
      " ", "as", " ", "the", " ", "parameter", " ", "returns", " ", "the", 
     " ", "social", " ", "media", " ", "ID", " ", "associated", " ", "with", 
     " ", "that", " ", "account"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getID", "[", 
     RowBox[{"name_", ",", "media_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"SocialMediaData", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"media", ",", "name"}], "}"}], ",", "\"\<UserData\>\""}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\"\<ID\>\"", "\[Rule]", "b_"}], ")"}], "\[Rule]", " ", 
        "b"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "A", " ", "function", " ", "that", " ", "gets", " ", "UserData", " ", 
     "and", " ", "returns", " ", "the", " ", "gender", " ", "of", " ", "the", 
     " ", "person", " ", "associated", " ", "with", " ", "the", " ", "social",
      " ", "media", " ", "account", " ", "with", " ", "the", " ", "ID", " ", 
     "given", " ", "as", " ", "a", " ", 
     RowBox[{"parameter", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"getGender", "[", 
     RowBox[{"id_", ",", "media_"}], "]"}], ":=", 
    RowBox[{"stringForm", "[", 
     RowBox[{"\"\<Gender\>\"", "/.", 
      RowBox[{"select", "[", 
       RowBox[{
        RowBox[{"SocialMediaData", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<Facebook\>\"", ",", "id"}], "}"}], ",", 
          "\"\<UserData\>\""}], "]"}], ",", "\"\<Gender\>\""}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "A", " ", "function", " ", "that", " ", "returns", " ", "true", " ", 
       "or", " ", "false", " ", "based", " ", "on", " ", "our", " ", 
       "criteria", " ", "for", " ", "a", " ", "\"\<status\>\""}], ":", " ", 
      RowBox[{
      "officially", " ", "called", " ", "a", " ", "\"\<status update\>\""}]}],
      ",", " ", 
     RowBox[{
     "our", " ", "function", " ", "checks", " ", "the", " ", "\"\<Type\>\"", 
      " ", "of", " ", "post", " ", "as", " ", "returned", " ", "by", " ", 
      "SocialMediaData", " ", "and", " ", "checks", " ", "to", " ", "ensure", 
      " ", "that", " ", "it", " ", "can", " ", "and", " ", "has", " ", "been",
       " ", "acted", " ", "upon", " ", 
      RowBox[{"(", 
       RowBox[{"\"\<Actions\>\"", "\[Rule]", "_"}], ")"}], " ", "and"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"statusQ", "[", "list_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"findType", "[", "list", "]"}], "\[Equal]", "\"\<status\>\""}],
       ")"}], "&&", 
     RowBox[{"existsQ", "[", 
      RowBox[{"list", ",", 
       RowBox[{"\"\<Actions\>\"", "\[Rule]", "_"}]}], "]"}], "&&", 
     RowBox[{"!", 
      RowBox[{"existsQ", "[", 
       RowBox[{"list", ",", 
        RowBox[{"\"\<Story\>\"", "\[Rule]", "_"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "A", " ", "function", " ", "that", " ", "gets", " ", "Posts", " ", "from",
      " ", "the", " ", "given", " ", "ID", " ", "number", " ", "and", " ", 
     "returns", " ", "the", " ", "ones", " ", "that", " ", "satisfy", " ", 
     "statusQ", " ", "and", " ", "have", " ", "one", " ", "or", " ", "more", 
     " ", "comments"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getPosts", "[", "ID_", "]"}], ":=", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"SocialMediaData", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<Facebook\>\"", ",", "ID"}], "}"}], ",", 
         "\"\<Posts\>\""}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"statusQ", "[", "#", "]"}], "&&", 
          RowBox[{"existsQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<Comments\>\"", "\[Rule]", "_"}]}], "]"}]}], ")"}], 
        "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "A", " ", "function", " ", "that", " ", "returns", " ", "true", " ", 
      "if", " ", "calling", " ", "SocialMediaData", " ", "with", " ", 
      "parameters", 
      RowBox[{"{", 
       RowBox[{"\"\<Facebook\>\"", ",", "id"}], "}"}], " ", "and", " ", 
      "\"\<UserData\>\"", " ", "does", " ", "not", " ", "return", " ", "the", 
      " ", "function", " ", "call"}], ",", " ", 
     RowBox[{
     "and", " ", "calling", " ", "getPosts", " ", "for", " ", "the", " ", 
      "id", " ", 
      RowBox[{"doesn", "'"}], "t", " ", "return", " ", "an", " ", "empty", 
      " ", 
      RowBox[{"list", ".", " ", "This"}], " ", "function", " ", "returns", 
      " ", "false", " ", "if", " ", "either", " ", "the", " ", "first", " ", 
      "condition", " ", "fails", " ", "or", " ", "the", " ", 
      RowBox[{"second", ".", " ", "This"}], " ", "functions", " ", "also", 
      " ", "stores", " ", "each", " ", "id", " ", "that", " ", "it", " ", 
      "processes", " ", "so", " ", "that", " ", "generateIDs", " ", "can", 
      " ", "be", " ", "paused", " ", "and", " ", "continued", " ", "at", " ", 
      "any", " ", "point", " ", "in", " ", 
      RowBox[{"time", ".", " ", "If"}], " ", "the", " ", "\"\<If\>\"", " ", 
      "statement", " ", "returns", " ", "an", " ", "error", " ", "of", " ", 
      "any", " ", "type"}], ",", " ", 
     RowBox[{
     "then", " ", "the", " ", "query", " ", "limit", " ", "has", " ", "been", 
      " ", "reached", " ", "and", " ", "the", " ", "function", " ", "will", 
      " ", "create", " ", "a", " ", "pause", " ", "for", " ", "30", " ", 
      "minutes", " ", 
      RowBox[{"(", 
       RowBox[{"1800", " ", "seconds"}], ")"}]}], ",", " ", 
     RowBox[{
     "then", " ", "call", " ", "and", " ", "return", " ", "the", " ", 
      "output", " ", "from", " ", "profileQ"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"profileQ", "[", "id_", "]"}], ":=", 
    RowBox[{"Check", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"SocialMediaData", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Facebook\>\"", ",", "id"}], "}"}], ",", 
             "\"\<UserData\>\""}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[NotEqual]", "  ", 
         "\"\<UserData\>\""}], ",", 
        RowBox[{
         RowBox[{"Export", "[", 
          RowBox[{
           RowBox[{"notebookLocation", "<>", "\"\<existingIDs.csv\>\""}], ",", 
           RowBox[{"Import", "[", 
            RowBox[{"notebookLocation", "<>", "\"\<existingIDs.csv\>\""}], 
            "]"}], ",", "id"}], "]"}], ";", 
         RowBox[{"numScanned", "++"}], ";", 
         RowBox[{
          RowBox[{"getPosts", "[", "id", "]"}], "\[NotEqual]", " ", 
          RowBox[{"{", "}"}]}]}], ",", "False"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Pause", "[", "1800", "]"}], ";", 
       RowBox[{"profileQ", "[", "id", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "A", " ", "function", " ", "that", " ", "returns", " ", "the", " ", 
      "IDs", " ", "that", " ", "are", " ", "valid", " ", 
      RowBox[{"profiles", ".", " ", "It"}], " ", "does", " ", "this", " ", 
      "through", " ", "an", " ", "incremental", " ", 
      RowBox[{"approach", ".", " ", "Also"}]}], ",", " ", 
     RowBox[{"as", " ", "this", " ", "function", " ", "is", " ", "running"}], 
     ",", " ", 
     RowBox[{
     "it", " ", "will", " ", "provide", " ", "a", " ", "number", " ", "that", 
      " ", "tells", " ", "the", " ", "current", " ", "ID", " ", "that", " ", 
      "is", " ", "being", " ", 
      RowBox[{"checked", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"generateIDs", "[", 
     RowBox[{"count_", ",", "media_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"list", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"i", "=", "0"}], ",", 
        RowBox[{"newID", "=", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{"notebookLocation", "<>", "\"\<existingIDs.csv\>\""}], 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"temp", "=", "\"\<3\>\""}], ",", 
        RowBox[{"j", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Monitor", "[", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"i", "<", "count"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"profileQ", "[", 
                RowBox[{"ToString", "[", "temp", "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"newID", "++"}], ";", "\[IndentingNewLine]", 
               RowBox[{"temp", " ", "=", " ", "newID"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"list", ",", 
              RowBox[{"ToString", "[", "newID", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"temp", "=", "\"\<3\>\""}], ";", "\[IndentingNewLine]", 
            RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", " ", "]"}], 
         ",", "\[IndentingNewLine]", "newID"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "list", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.608991885416056*^9, 3.608991926828197*^9}, {
   3.6089920083413477`*^9, 3.6089920090184155`*^9}, {3.6089921001615286`*^9, 
   3.6089921136278753`*^9}, {3.6089928156750727`*^9, 3.608992831428648*^9}, 
   3.6089929456580696`*^9, 3.608993995789768*^9, {3.6089942329667683`*^9, 
   3.608994236725768*^9}, {3.6089942719407682`*^9, 3.608994282029768*^9}, {
   3.6090112247003202`*^9, 3.6090113320923204`*^9}, {3.6090114360163207`*^9, 
   3.609011451482321*^9}, {3.6090116426233206`*^9, 3.6090117217933207`*^9}, {
   3.609011776527321*^9, 3.6090117969223204`*^9}, {3.609011845635829*^9, 
   3.609011850080162*^9}, {3.6090120166121063`*^9, 3.609012036270002*^9}, {
   3.6090120794829617`*^9, 3.609012082256794*^9}, {3.609012116156961*^9, 
   3.6090121166691146`*^9}, {3.609012512751515*^9, 3.6090125759638352`*^9}, {
   3.6090126388921275`*^9, 3.609012679568195*^9}, {3.6090127150607433`*^9, 
   3.609012727315969*^9}, {3.6090128784170775`*^9, 3.6090129462248573`*^9}, {
   3.6090129812473593`*^9, 3.609012984904725*^9}, {3.6090130274059753`*^9, 
   3.6090132128895216`*^9}, {3.609019028770337*^9, 3.6090190954063373`*^9}, {
   3.609019155052337*^9, 3.6090191743333373`*^9}, 3.609020052031163*^9, {
   3.609020124413872*^9, 3.609020129049262*^9}, {3.609020173348548*^9, 
   3.609020182728361*^9}, {3.6090218807911234`*^9, 3.6090219092259665`*^9}, {
   3.609021954971541*^9, 3.6090220633063736`*^9}, {3.6090221253655787`*^9, 
   3.609022196505692*^9}, {3.6090222295529966`*^9, 3.6090222928503256`*^9}, {
   3.6090226904690833`*^9, 3.609022782514287*^9}, {3.6090228657226067`*^9, 
   3.60902290195623*^9}, {3.6090232518872194`*^9, 3.6090232683778687`*^9}, {
   3.6090233808351135`*^9, 3.609023392174247*^9}, {3.609025010885377*^9, 
   3.609025016021377*^9}, {3.609025117390377*^9, 3.6090252303723774`*^9}, {
   3.6090258802403774`*^9, 3.6090259409053774`*^9}, {3.609026005770377*^9, 
   3.609026019774377*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Sorting (8)", "Section",
 CellChangeTimes->{{3.60899298476698*^9, 3.608992993048808*^9}, {
  3.6090520598876476`*^9, 3.609052060922751*^9}}],

Cell[TextData[{
 "This section of code is mostly devoted to finding specific pieces of \
information from the returns of the functions from the previous sections. The \
functions whose sole purpose is to find specific pieces of data are prefixed \
with \[OpenCurlyDoubleQuote]find\[CloseCurlyDoubleQuote] and followed by the \
type of content that is being sought.\n\nA few definitions we used for this \
section are:\n\n",
 StyleBox["comment",
  FontVariations->{"Underline"->True}],
 "- a string created by a Facebook user in response to a ",
 StyleBox["status update\n\npost",
  FontVariations->{"Underline"->True}],
 "- a reference to either a ",
 StyleBox["comment",
  FontVariations->{"Underline"->True}],
 " or a ",
 StyleBox["status update",
  FontVariations->{"Underline"->True}],
 "\n\[LineSeparator]",
 StyleBox["message",
  FontVariations->{"Underline"->True}],
 "- the string that contains the words that a user is trying to ",
 StyleBox["comment",
  FontVariations->{"Underline"->True}],
 " on a ",
 StyleBox["status update",
  FontVariations->{"Underline"->True}],
 "  \n\n",
 StyleBox["statusGender",
  FontVariations->{"Underline"->True}],
 "- the gender of the creator of a status as listed by their social media \
profile\n\n",
 StyleBox["commentGender",
  FontVariations->{"Underline"->True}],
 "- the gender of the creator of a ",
 StyleBox["comment",
  FontVariations->{"Underline"->True}],
 " as listed by their social media profile\n\n",
 StyleBox["gender interaction",
  FontVariations->{"Underline"->True}],
 "- the commenting of a person (of a specific gender) on another person\
\[CloseCurlyQuote]s ",
 StyleBox["status update",
  FontVariations->{"Underline"->True}],
 " (of a specific gender). There are 4 gender interactions that we are \
comparing: female to female (ff), female to male (fm), male to female (mf), \
and male to male (mm). These interactions will always appear in the same \
order in the code. "
}], "Text",
 CellChangeTimes->{{3.609026108215377*^9, 3.6090261285423775`*^9}, {
  3.6090273056763773`*^9, 3.6090273333703775`*^9}, {3.6090274233203773`*^9, 
  3.609027430635377*^9}, {3.609027467364377*^9, 3.6090274940163774`*^9}, {
  3.609027676892377*^9, 3.609027813508377*^9}, {3.609027863955377*^9, 
  3.609027970373377*^9}, {3.609028001590377*^9, 3.609028172595377*^9}, {
  3.6090288706033773`*^9, 3.609028982925377*^9}, {3.609029016534377*^9, 
  3.609029030178377*^9}, {3.6090375494306717`*^9, 3.609037659441672*^9}, {
  3.609038105646288*^9, 3.6090382097516975`*^9}, {3.609039942090914*^9, 
  3.6090399636310673`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "A", " ", "function", " ", "that", " ", "returns", " ", "the", " ", "type",
     " ", "of", " ", "post", " ", "as", " ", "labeled", " ", "by", " ", 
    RowBox[{"\"\<SocialMediaData\>\"", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"findType", "[", "post_", "]"}], ":=", 
    RowBox[{"\"\<Type\>\"", "/.", 
     RowBox[{"select", "[", 
      RowBox[{"post", ",", "\"\<Type\>\""}], "]"}]}]}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Returns", " ", "the", " ", "message", " ", "of", " ", "a", " ", 
      RowBox[{"post", ".", " ", "Applying"}], " ", "directly", " ", "to", " ",
       "a", " ", "status", " ", "update", " ", "will", " ", "return", " ", 
      "the", " ", "message", " ", "of", " ", "the", " ", "status", " ", 
      "update"}], ",", " ", 
     RowBox[{
     "while", " ", "applying", " ", "it", " ", "directly", " ", "to", " ", 
      "a", " ", "comment", " ", "will", " ", "return", " ", "the", " ", 
      "comment", " ", 
      RowBox[{"message", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findMessage", "[", "list_", "]"}], ":=", " ", 
    RowBox[{"\"\<Message\>\"", "/.", 
     RowBox[{"select", "[", 
      RowBox[{"list", ",", "\"\<Message\>\""}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Returns", " ", "the", " ", "ID", " ", "numbers", " ", "of", " ", "the", 
      " ", "authors", " ", "of", " ", "each", " ", "of", " ", "the", " ", 
      "comments", " ", "on", " ", "a", " ", "status", " ", "update", " ", 
      "if", " ", "at", " ", "least", " ", "one", " ", "comment", " ", 
      RowBox[{"exists", ".", " ", "This"}], " ", "is", " ", "done", " ", 
      "through", " ", "many", " ", "calls", " ", "of", " ", 
      RowBox[{"\"\<ReplaceAll\>\"", ".", " ", "By"}], " ", "the", " ", "time",
       " ", "the", " ", "data", " ", "has", " ", "reached", " ", "this", " ", 
      "point", " ", "in", " ", "processing"}], ",", " ", 
     RowBox[{
     "status", " ", "updates", " ", "without", " ", "comments", " ", "should",
       " ", "have", " ", "already", " ", "been", " ", "filtered", " ", 
      "out"}], ",", " ", 
     RowBox[{
     "but", " ", "the", " ", "\"\<If\>\"", " ", "statement", " ", "is", " ", 
      "a", " ", "failsafe", " ", "for", " ", "situations", " ", "that", " ", 
      "we", " ", "may", " ", "have", " ", "not", " ", "been", " ", "able", 
      " ", "to", " ", 
      RowBox[{"catch", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findCommentAuthors", "[", "status_", "]"}], ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"existsQ", "[", 
       RowBox[{"status", ",", 
        RowBox[{"\"\<Comments\>\"", "\[Rule]", "_"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\"\<ID\>\"", "/.", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ")"}], "/@", 
       RowBox[{"(", 
        RowBox[{"\"\<From\>\"", "/.", 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{"\"\<Data\>\"", "/.", 
            RowBox[{"stringForm", "[", 
             RowBox[{"select", "[", 
              RowBox[{
               RowBox[{"\"\<Comments\>\"", "/.", 
                RowBox[{"stringForm", "[", 
                 RowBox[{"select", "[", 
                  RowBox[{"status", ",", "\"\<Comments\>\""}], "]"}], "]"}]}],
                ",", "\"\<Data\>\""}], "]"}], "]"}]}], ")"}], ")"}]}], 
        ")"}]}], ",", 
      RowBox[{"{", "\"\<No Comments\>\"", "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Returns", " ", "the", " ", "messages", " ", "of", " ", "the", " ", 
      "comments", " ", "of", " ", "a", " ", "status", " ", "update", " ", 
      "if", " ", "at", " ", "least", " ", "one", " ", "comment", " ", 
      RowBox[{"exists", ".", " ", "This"}], " ", "is", " ", "done", " ", 
      "through", " ", "many", " ", "calls", " ", "of", " ", 
      "\"\<ReplaceAll\>\"", " ", "and", " ", "a", " ", "call", " ", "of", " ", 
      RowBox[{"\"\<findMessage\>\"", ".", " ", "By"}], " ", "the", " ", 
      "time", " ", "the", " ", "data", " ", "has", " ", "reached", " ", 
      "this", " ", "point", " ", "in", " ", "processing"}], ",", " ", 
     RowBox[{
     "status", " ", "updates", " ", "without", " ", "comments", " ", "should",
       " ", "have", " ", "already", " ", "been", " ", "filtered", " ", 
      "out"}], ",", " ", 
     RowBox[{
     "but", " ", "the", " ", "\"\<If\>\"", " ", "statement", " ", "is", " ", 
      "a", " ", "failsafe", " ", "for", " ", "situations", " ", "that", " ", 
      "we", " ", "may", " ", "have", " ", "not", " ", "been", " ", "able", 
      " ", "to", " ", 
      RowBox[{"catch", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findCommentMessages", "[", "status_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"existsQ", "[", 
       RowBox[{"status", ",", 
        RowBox[{"\"\<Comments\>\"", "\[Rule]", "_"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"findMessage", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"(", 
        RowBox[{"\"\<Data\>\"", "/.", 
         RowBox[{"stringForm", "[", 
          RowBox[{"select", "[", 
           RowBox[{
            RowBox[{"\"\<Comments\>\"", "/.", 
             RowBox[{"stringForm", "[", 
              RowBox[{"select", "[", 
               RowBox[{"status", ",", "\"\<Comments\>\""}], "]"}], "]"}]}], 
            ",", "\"\<Data\>\""}], "]"}], "]"}]}], ")"}]}], ",", 
      RowBox[{"{", "\"\<No Comments\>\"", "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "function", " ", "is", " ", "given", " ", "a", " ", "list", 
     " ", "in", " ", "the", " ", "form", " ", 
     RowBox[{"{", 
      RowBox[{"commentGender", ",", "statusGender", ",", "message"}], "}"}], 
     " ", "and", " ", "splits", " ", "the", " ", "message", " ", "into", " ", 
     "its", " ", "individual", " ", "words", " ", "and", " ", "returns", " ", 
     "a", " ", "list", " ", "of", " ", "lists", " ", "with", " ", "each", " ",
      "element", " ", "in", " ", "the", " ", "form", " ", 
     RowBox[{"{", 
      RowBox[{"commentGender", ",", "statusGender", ",", "word"}], "}"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sortForm", "[", "list_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"list", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"list", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "#"}], "}"}], "&"}], "/@", 
     RowBox[{"StringSplit", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToLowerCase", "[", 
         RowBox[{"list", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<,\>\"", "\[Rule]", "\"\< \>\""}], ",", 
          RowBox[{"\"\<.\>\"", "\[Rule]", "\"\< \>\""}], ",", 
          RowBox[{"\"\<\\\"\>\"", "\[Rule]", " ", "\"\< \>\""}]}], "}"}]}], 
       "]"}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Given", " ", "a", " ", "post"}], ",", " ", 
     RowBox[{
     "returns", " ", "a", " ", "list", " ", "of", " ", "lists", " ", "in", 
      " ", "the", " ", "form", " ", 
      RowBox[{"{", 
       RowBox[{"commentGender", ",", "statusGender", ",", "\"\<word\>\""}], 
       "}"}], " ", "as", " ", "the", " ", "first", " ", "element", " ", "and",
       " ", "the", " ", "total", " ", "of", " ", "the", " ", "occurances", 
      " ", "of", " ", "each", " ", "gender", " ", "interaction", " ", "as", 
      " ", "the", " ", "second", " ", "element", " ", "of", " ", "the", " ", 
      RowBox[{"list", ".", " ", "Inside"}], " ", "this", " ", "function", " ",
       "we", " ", "bring", " ", "together", " ", "findCommentAuthors", " ", 
      "and", " ", "findCommentMessages"}], ",", " ", 
     RowBox[{
     "which", " ", "should", " ", "return", " ", "two", " ", "lists", " ", 
      "of", " ", "equal", " ", 
      RowBox[{"length", ".", " ", "This"}], " ", "we", " ", "transpose", " ", 
      "using", " ", "our", " ", "helper", " ", "function", " ", 
      "\"\<connect\>\"", " ", "and", " ", "after", " ", "adding", " ", "a", 
      " ", "list", " ", "of", " ", "the", " ", "statusGender", " ", "that", 
      " ", "is", " ", "the", " ", "same", " ", "length", " ", "as", " ", 
      "the", " ", "other", " ", "two", " ", "lists"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"commentForm", "[", 
     RowBox[{"gender_", ",", "post_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"{", "}"}]}], ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"getGender", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"connect", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"findCommentAuthors", "[", "post", "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"gender", ",", 
               RowBox[{"{", 
                RowBox[{"Length", "[", 
                 RowBox[{"findCommentAuthors", "[", "post", "]"}], "]"}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"findCommentMessages", "[", "post", "]"}]}], "}"}], 
           "]"}]}], " ", ")"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ff", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"data", ",", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<female\>\"", ",", "\"\<female\>\"", ",", "_"}], 
               "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fm", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"data", ",", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<female\>\"", ",", "\"\<male\>\"", ",", "_"}], 
               "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mf", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"data", ",", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<male\>\"", ",", "\"\<female\>\"", ",", "_"}], 
               "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"mm", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"data", ",", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<male\>\"", ",", "\"\<male\>\"", ",", "_"}], 
               "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"sortForm", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], "/@",
            "data"}], ",", 
          RowBox[{"{", 
           RowBox[{"ff", ",", "fm", ",", "mf", ",", "mm"}], "}"}]}], "}"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Returns", " ", "a", " ", "list", " ", "of", " ", "the", " ", "unique", 
      " ", "words", " ", "from", " ", "a", " ", "list", " ", "in", " ", "the",
       " ", "form", " ", "of", " ", "the", " ", "first", " ", "element", " ", 
      "of", " ", "\"\<commentForm\>\""}], ":", " ", 
     RowBox[{"{", 
      RowBox[{"commentGender", ",", "statusGender", ",", "\"\<word\>\""}], 
      "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniqueWords", "[", "list_", "]"}], ":=", 
    RowBox[{"Union", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", "list"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Given", " ", "a", " ", "list", " ", "from", " ", "the", " ", "first", 
      " ", "element", " ", "in", " ", "\"\<commentForm\>\"", " ", "and", " ", 
      "the", " ", "total", " ", "number", " ", "of", " ", "all", " ", 
      "gender", " ", "interactions", " ", "for", " ", "all", " ", "words", 
      " ", "currently", " ", "in", " ", "the", " ", "database"}], ",", " ", 
     RowBox[{
     "returns", " ", "a", " ", "list", " ", "with", " ", "the", " ", "total", 
      " ", "of", " ", "the", " ", "occurences", " ", "of", " ", "each", " ", 
      "gender", " ", "interaction", " ", "for", " ", "each", " ", "unique", 
      " ", "word", " ", "as", " ", "the", " ", "second", " ", "element", " ", 
      "and", " ", "the", " ", "new", " ", "total", " ", "number", " ", "of", 
      " ", "all", " ", "gender", " ", "interactions", " ", "for", " ", "all", 
      " ", 
      RowBox[{"words", ".", " ", "Given"}], " ", "a", " ", "list", " ", "in", 
      " ", "the", " ", "form", " ", "of", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "commentGender", ",", " ", "statusGender", ",", "\"\<word\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "commentGender", ",", " ", "statusGender", ",", "\"\<word2\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "commentGender", ",", " ", "statusGender", ",", "\"\<word\>\""}], 
         "}"}], ",", "..."}], "}"}], " ", "and", " ", "total"}], ",", " ", 
     RowBox[{
     "returns", " ", "a", " ", "list", " ", "in", " ", "the", " ", "form", 
      " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"new", " ", "total"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<word\>\"", ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<word2\>\"", ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
           "}"}], ",", "..."}], "}"}]}], "}"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"displayForm", "[", 
     RowBox[{"list_", ",", "total_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"unique", "=", 
         RowBox[{"uniqueWords", "[", "list", "]"}]}], ",", 
        RowBox[{"newTotal", "=", 
         RowBox[{"total", "+", 
          RowBox[{"Length", "[", "list", "]"}]}]}], ",", 
        RowBox[{"temp", "=", 
         RowBox[{"{", "}"}]}], ",", "i", ",", 
        RowBox[{"return", "=", 
         RowBox[{"{", "}"}]}], ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
       "}"}], " ", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "unique", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"list", ",", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"_", ",", "_", ",", 
                  RowBox[{"unique", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], "&"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ff", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"temp", ",", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<female\>\"", ",", "\"\<female\>\"", ",", "_"}],
                   "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"fm", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"temp", ",", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<female\>\"", ",", "\"\<male\>\"", ",", "_"}], 
                  "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"mf", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"temp", ",", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<male\>\"", ",", "\"\<female\>\"", ",", "_"}], 
                  "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"mm", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"temp", ",", 
              RowBox[{
               RowBox[{"MatchQ", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"\"\<male\>\"", ",", "\"\<male\>\"", ",", "_"}], 
                  "}"}]}], "]"}], "&"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ff", "\[Equal]", "0"}], "&&", 
             RowBox[{"fm", "\[Equal]", "0"}], "&&", 
             RowBox[{"mf", "\[Equal]", "0"}], "&&", 
             RowBox[{"mm", "\[Equal]", "0"}]}], ",", "Continue", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"return", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"unique", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "ff", ",", "fm", ",", 
                 "mf", ",", "mm"}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"newTotal", ",", "return"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6089931219807005`*^9, 3.6089931340919113`*^9}, 
   3.6089933467101707`*^9, 3.6089939605587683`*^9, 3.6089940111067677`*^9, 
   3.608994118845768*^9, {3.608994211655768*^9, 3.608994213004768*^9}, 
   3.6090118397660685`*^9, {3.6090126971629543`*^9, 3.609012700073245*^9}, {
   3.6090129598312182`*^9, 3.6090129710263376`*^9}, {3.609026038079377*^9, 
   3.6090260867593775`*^9}, 3.609026664843377*^9, {3.609028092988377*^9, 
   3.6090280969363775`*^9}, {3.609028186500377*^9, 3.609028571868377*^9}, {
   3.609028605113377*^9, 3.609028628889377*^9}, {3.6090286622593775`*^9, 
   3.609028710691377*^9}, {3.609028757932377*^9, 3.609028782774377*^9}, {
   3.6090288136503773`*^9, 3.609028864441377*^9}, {3.6090290370633774`*^9, 
   3.6090290569763775`*^9}, {3.6090365157303123`*^9, 3.609036576922431*^9}, {
   3.6090366091156497`*^9, 3.6090367709918356`*^9}, {3.609036808698606*^9, 
   3.609036861356871*^9}, {3.6090369093656716`*^9, 3.609036948172552*^9}, {
   3.609036978404575*^9, 3.609037070500784*^9}, {3.6090371254122744`*^9, 
   3.609037153295062*^9}, {3.609037200416774*^9, 3.6090372183165636`*^9}, {
   3.6090373409598265`*^9, 3.6090373552962604`*^9}, {3.6090374090936394`*^9, 
   3.609037413260056*^9}, {3.609037471635893*^9, 3.6090374847902083`*^9}, {
   3.6090380971044335`*^9, 3.609038100950818*^9}, {3.6090382202117434`*^9, 
   3.6090382327599983`*^9}, {3.6090383552472453`*^9, 
   3.6090383652682476`*^9}, {3.609038458413561*^9, 3.609038545179237*^9}, {
   3.6090385965133696`*^9, 3.609038645102228*^9}, {3.609039222822994*^9, 
   3.609039506698379*^9}, {3.6090395971514235`*^9, 3.6090396856262703`*^9}, {
   3.6090397331640234`*^9, 3.6090399342111263`*^9}, {3.6090399740641108`*^9, 
   3.6090400063623405`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Combining Functions and Database Modification (4)\
\>", "Section",
 CellChangeTimes->{{3.6089943384017677`*^9, 3.6089943439857683`*^9}, {
  3.6089943881917677`*^9, 3.608994396917768*^9}, {3.6089944951107683`*^9, 
  3.608994520449768*^9}, {3.6090448869211335`*^9, 3.6090449000091333`*^9}, {
  3.6090449324081335`*^9, 3.6090449356711335`*^9}, {3.6090520726479235`*^9, 
  3.6090520740770664`*^9}}],

Cell["\<\
This section of code is mostly functions that combine multiple functions into \
one and modify to the database we have stored in a .csv file.\
\>", "Text",
 CellChangeTimes->{{3.6090448146391335`*^9, 3.6090448466511335`*^9}, {
   3.609044879817134*^9, 3.609044882192134*^9}, {3.6090449191301336`*^9, 
   3.6090449623941336`*^9}, 3.6090450380141335`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "A", " ", "function", " ", "that", " ", "calls", " ", "getPosts", " ", 
     "with", " ", "the", " ", "parameter", " ", "\"\<id\>\"", " ", "and", " ",
      "calls", " ", "commentForm"}], ",", " ", 
    RowBox[{
     RowBox[{
     "giving", " ", "it", " ", "each", " ", "element", " ", "of", " ", "the", 
      " ", "return", " ", "from", " ", "getPosts", " ", "and", " ", "the", 
      " ", "gender", " ", "of", " ", "the", " ", "status"}], "-", 
     RowBox[{
     "update", " ", "maker", " ", "as", " ", "returned", " ", "from", " ", 
      "getGender"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getList", "[", "id_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"commentForm", "[", 
        RowBox[{
         RowBox[{"getGender", "[", "id", "]"}], ",", "#"}], "]"}], ")"}], 
      "&"}], "/@", 
     RowBox[{"getPosts", "[", "id", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Given", " ", "two", " ", "lists", " ", "of", " ", "data", " ", "for", 
      " ", "a", " ", "specific", " ", "word", " ", "in", " ", "the", " ", 
      "form", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<word\>\"", ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
       "}"}]}], ",", " ", 
     RowBox[{
     "this", " ", "function", " ", "adds", " ", "up", " ", "the", " ", 
      "numbers", " ", "for", " ", "each", " ", "gender", " ", "interaction", 
      " ", "and", " ", "returns", " ", "a", " ", "list", " ", "in", " ", 
      "the", " ", "same", " ", "form", " ", "as", " ", "the", " ", "input", 
      " ", "lists"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mergeWordData", "[", 
     RowBox[{"oldList_", ",", "newList_"}], "]"}], ":=", " ", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", "#", "]"}], "&"}], "/@", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Take", "[", 
            RowBox[{"oldList", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"newList", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], ")"}], 
      ",", 
      RowBox[{"oldList", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Given", " ", "two", " ", "lists", " ", "of", " ", "word", " ", "data"}],
      ",", " ", 
     RowBox[{
     "returns", " ", "a", " ", "list", " ", "of", " ", "the", " ", "two", " ", 
      RowBox[{"combined", ".", " ", "The"}], " ", "two", " ", "lists", " ", 
      "are", " ", "in", " ", "the", " ", 
      RowBox[{"format", ":", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<word\>\"", ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<word2\>\"", ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<word3\>\"", ",", "ff", ",", "fm", ",", "mf", ",", "mm"}], 
           "}"}], ",", "..."}], "}"}], " ", "and", " ", "the", " ", 
        "function", " ", "returns", " ", "a", " ", "list", " ", "in", " ", 
        "the", " ", "same", " ", 
        RowBox[{"format", ".", " ", "If"}], " ", "a", " ", "word", " ", 
        "exists", " ", "within", " ", "the", " ", "database"}]}]}], ",", " ", 
     RowBox[{
     "it", " ", "sends", " ", "it", " ", "to", " ", "\"\<mergeWordData\>\""}],
      ",", " ", 
     RowBox[{
     "otherwise", " ", "it", " ", "appends", " ", "the", " ", "word", " ", 
      "data", " ", "to", " ", "the", " ", "list", " ", "to", " ", "be", " ", 
      "returned"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mergeDatabases", "[", 
     RowBox[{"currentDatabase_", ",", "newData_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"newDatabase", "=", "currentDatabase"}], ",", "i", ",", 
        RowBox[{"temp", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "newData", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"newDatabase", ",", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"newData", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "_", ",", "_",
                   ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "]"}], 
              "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"temp", "\[NotEqual]", " ", 
             RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newDatabase", "=", 
              RowBox[{"Delete", "[", 
               RowBox[{"newDatabase", ",", 
                RowBox[{"Position", "[", 
                 RowBox[{"newDatabase", ",", 
                  RowBox[{"temp", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"newDatabase", ",", 
               RowBox[{"mergeWordData", "[", 
                RowBox[{
                 RowBox[{"temp", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"newData", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"newDatabase", ",", 
              RowBox[{"newData", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], " ", "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "newDatabase", "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "One", " ", "of", " ", "the", " ", "larger", " ", 
                    "functions", " ", "of", " ", "our", " ", 
                    RowBox[{"program", ".", " ", "Given"}], " ", "a", " ", 
                    "media", " ", "type", " ", "and", " ", "the", " ", 
                    "number", " ", "of", " ", "accounts", " ", "to", " ", 
                    "add", " ", "to", " ", "the", " ", "database"}], ",", " ", 
                    RowBox[{"returns", " ", "nothing"}], ",", " ", 
                    RowBox[{
                    "but", " ", "adds", " ", "the", " ", "new", " ", "data", 
                    " ", "to", " ", "the", " ", "database", " ", "stored", 
                    " ", "in", " ", 
                    RowBox[{"a", " ", ".", "csv"}], " ", 
                    RowBox[{"file", ".", " ", "This"}], " ", "function", " ", 
                    "does", " ", "the", " ", 
                    RowBox[{
                    "following", ":", "\[IndentingNewLine]", "1."}]}]}], 
                    ")"}], " ", "Imports", " ", "the", " ", "old", " ", 
                    RowBox[{
                    "database", ".", " ", "\[IndentingNewLine]", "2."}]}], 
                    ")"}], " ", "Retrieves", " ", "the", " ", "old", " ", 
                    "total", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "stored", " ", "as", " ", "the", " ", "first", " ", 
                    "element", " ", "of", " ", "the", " ", "first", " ", 
                    "list", " ", "of", " ", "the", " ", "database"}], ")"}], 
                    "\[IndentingNewLine]", "3."}], ")"}], " ", "Generates", 
                   " ", "the", " ", "number", " ", "of", " ", "valid", " ", 
                   "IDs", " ", "indicated", " ", "by", " ", "the", " ", 
                   "parameter", " ", "\"\<count\>\"", " ", "by", " ", 
                   "calling", " ", "\"\<generateIDs\>\"", 
                   "\[IndentingNewLine]", "4."}], ")"}], " ", "Gets", " ", 
                 "the", " ", "return", " ", "of", " ", "the", " ", "data", 
                 " ", "after", " ", "applying", " ", "getList", " ", "for", 
                 " ", "each", " ", "ID", " ", "generated", " ", "and", " ", 
                 "joining", " ", "the", " ", "resulting", " ", 
                 RowBox[{"lists", ".", "\[IndentingNewLine]", "5."}]}], ")"}],
                " ", "Forms", " ", "a", " ", "list", " ", "of", " ", "the", 
               " ", "occurances", " ", "of", " ", "each", " ", "gender", " ", 
               "interaction", " ", "and", " ", "a", " ", "list", " ", "of", 
               " ", "the", " ", "word", " ", "data", " ", "in", " ", "the", 
               " ", "form", " ", "to", " ", "give", " ", "to", " ", 
               "\"\<displayForm\>\"", "\[IndentingNewLine]", "6."}], ")"}], 
             " ", "Calls", " ", "\"\<displayForm\>\"", " ", "with", " ", 
             "the", " ", "data", " ", "separated", " ", "in", " ", "step", 
             " ", "5.", "\[IndentingNewLine]", "7."}], ")"}], " ", 
           "Transposes", " ", "the", " ", "list", " ", "of", " ", "the", " ", 
           "occurances", " ", "of", " ", "each", " ", "gender", " ", 
           "interaction"}], ",", " ", 
          RowBox[{
          "then", " ", "totals", " ", "each", " ", "list", " ", "to", " ", 
           "get", " ", "the", " ", "total", " ", "of", " ", "each", " ", 
           "gender", " ", "interaction", "\[IndentingNewLine]", "8."}]}], 
         ")"}], " ", "Assigns", " ", "each", " ", "variable", " ", "its", " ",
         "repective", " ", "information", " ", "to", " ", "be", " ", "either",
         " ", "added", " ", "to", " ", "the", " ", "database", " ", "or", " ",
         "given", " ", "to", " ", "the", " ", "function", " ", 
        "\"\<mergeDatabases\>\"", "\[IndentingNewLine]", "9."}], ")"}], " ", 
      "\"\<mergeDatabases\>\"", " ", "is", " ", "called", " ", "with", " ", 
      "the", " ", "second", " ", "through", " ", "last", " ", "element", " ", 
      "of", " ", "the", " ", "old", " ", "database", " ", "and", " ", "the", 
      " ", "new", " ", "data"}], ",", " ", 
     RowBox[{"the", " ", "return", " ", "is", " ", "saved", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"with", " ", "the", " ", "new", " ", "total"}], ",", " ", 
        RowBox[{"the", " ", "new", " ", "\"\<last\>\"", " ", "ID"}], ",", " ", 
        RowBox[{
        "the", " ", "new", " ", "total", " ", "of", " ", "profiles", " ", 
         "analyzed"}], ",", " ", "ff", ",", "fm", ",", "mf", ",", " ", 
        RowBox[{"and", " ", "mm", " ", "prepended"}]}], ")"}], "to", " ", 
      RowBox[{"the", " ", ".", "csv"}], " ", "file"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"addToDatabase", "[", 
     RowBox[{"media_", ",", "count_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"currentDatabase", "=", 
         RowBox[{"Import", "[", 
          RowBox[{
          "notebookLocation", "<>", "media", "<>", "\"\<Database.csv\>\""}], 
          "]"}]}], ",", "total", ",", "IDs", ",", "newData", ",", 
        "newDatabase", ",", "list", ",", "ff", ",", "fm", ",", "mf", ",", 
        "mm", ",", "rawData", ",", "weights", ",", "data", ",", 
        "transposed"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"total", "=", 
        RowBox[{"currentDatabase", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"IDs", "=", 
        RowBox[{"generateIDs", "[", 
         RowBox[{"count", ",", "media"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
          "\"\<profileIDs.csv\>\""}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
             "\"\<profileIDs.csv\>\""}], "]"}], ",", "IDs"}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"rawData", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"Delete", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"getList", "[", "#", "]"}], "&"}], "/@", "IDs"}], ",", 
           "0"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"weights", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "&"}], "/@", "rawData"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "rawData"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"displayForm", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"data", ",", "1"}], "]"}], ",", "total"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"transposed", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", "#", "]"}], "&"}], "/@", 
         RowBox[{"Transpose", "[", "weights", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ff", "=", 
        RowBox[{"transposed", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"fm", "=", 
        RowBox[{"transposed", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mf", "=", 
        RowBox[{"transposed", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mm", "=", 
        RowBox[{"transposed", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"total", "=", 
        RowBox[{"list", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newData", "=", 
        RowBox[{"list", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"newDatabase", "=", 
        RowBox[{"mergeDatabases", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"currentDatabase", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", 
              RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "newData"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{
         "notebookLocation", "<>", "media", "<>", "\"\<Database.csv\>\""}], 
         ",", 
         RowBox[{"Prepend", "[", 
          RowBox[{"newDatabase", ",", 
           RowBox[{"{", 
            RowBox[{"total", ",", 
             RowBox[{"IDs", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", "IDs", "]"}], "+", 
              RowBox[{"currentDatabase", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "3"}], "]"}], "]"}]}], ",", 
             RowBox[{"ff", "+", 
              RowBox[{"currentDatabase", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "4"}], "]"}], "]"}]}], ",", 
             RowBox[{"fm", "+", 
              RowBox[{"currentDatabase", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "5"}], "]"}], "]"}]}], ",", 
             RowBox[{"mf", "+", 
              RowBox[{"currentDatabase", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "6"}], "]"}], "]"}]}], ",", 
             RowBox[{"mm", "+", 
              RowBox[{"currentDatabase", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "7"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6089955948911886`*^9, 3.6089955957712765`*^9}, {
   3.6089956814598446`*^9, 3.608995696956394*^9}, {3.608995759510649*^9, 
   3.608995760308729*^9}, {3.6090191910903373`*^9, 3.6090192254913373`*^9}, {
   3.6090193759103374`*^9, 3.609019441199337*^9}, {3.609019496032337*^9, 
   3.609019516609337*^9}, 3.6090373149852295`*^9, {3.6090400268863926`*^9, 
   3.6090401627179747`*^9}, {3.6090402305217543`*^9, 3.609040433568057*^9}, {
   3.60904048470717*^9, 3.6090407590220537`*^9}, {3.609040856568592*^9, 
   3.609040952207461*^9}, {3.609041026306638*^9, 3.6090411752729864`*^9}, {
   3.6090412167158413`*^9, 3.6090412852329893`*^9}, {3.6090413393185797`*^9, 
   3.6090413437921324`*^9}, {3.6090413833891726`*^9, 3.609041661001134*^9}, {
   3.6090417096861334`*^9, 3.6090418163041334`*^9}, {3.6090418676381335`*^9, 
   3.6090418747951336`*^9}, {3.6090419307431335`*^9, 
   3.6090420269431334`*^9}, {3.6090450568411336`*^9, 
   3.6090451465071335`*^9}, {3.6090463663791337`*^9, 3.6090464415041337`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of Data (12)", "Section",
 CellChangeTimes->{{3.608994712390768*^9, 3.608994720161768*^9}, {
  3.609039407978508*^9, 3.60903940939665*^9}, {3.6090520908107395`*^9, 
  3.609052091962855*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"checkWeights", "[", "weights_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[Equal]", " ", "0"}], ",", "1", ",", "#"}], "]"}], 
     "&"}], "/@", "weights"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"countGrid", "[", 
    RowBox[{"list_", ",", "weights_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newList", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<female\>\"", "\[Rule]", " ", "\"\<female\>\""}], ",", 
           RowBox[{"list", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<female\>\"", "\[Rule]", " ", "\"\<male\>\""}], ",", 
           RowBox[{"list", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<male\>\"", "\[Rule]", " ", "\"\<female\>\""}], ",", 
           RowBox[{"list", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<male\>\"", "\[Rule]", "\"\<male\>\""}], ",", 
           RowBox[{"list", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"weight", "[", 
        RowBox[{
         RowBox[{"percent", "[", "newList", "]"}], ",", 
         RowBox[{"checkWeights", "[", "weights", "]"}]}], "]"}], ",", 
       RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"percent", "[", "list_", "]"}], ":=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"100", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "list"}], 
                 "]"}], ")"}]}], ")"}]}], "]"}], "]"}], "<>", "\"\<%\>\""}], 
         ")"}]}], "]"}], "&"}], ",", "list"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"weight", "[", 
    RowBox[{"list_", ",", "weights_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"list", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"N", "[", 
        FractionBox[
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], 
         RowBox[{"weights", "[", 
          RowBox[{"[", "i", "]"}], "]"}]], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wordGrid", "[", "list_", "]"}], ":=", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"countGrid", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Take", "[", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "4"}], ",", 
                RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], "}"}], "&"}],
        ",", 
       RowBox[{"Take", "[", 
        RowBox[{"list", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"readDatabase", "[", "media_", "]"}], ":=", 
   RowBox[{"wordGrid", "[", 
    RowBox[{"Import", "[", 
     RowBox[{
     "notebookLocation", "<>", "media", "<>", "\"\<Database.csv\>\""}], "]"}],
     "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"weighting", "[", 
    RowBox[{"list_", ",", "total_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "5"}], "}"}]}], "]"}], "/", 
        RowBox[{"checkWeights", "[", "total", "]"}]}], ")"}], "]"}], "&"}], "/@",
     "list"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"top", "[", 
    RowBox[{"media_", ",", "num_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rawData", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
         "notebookLocation", "<>", "media", "<>", "\"\<Database.csv\>\""}], 
         "]"}]}], ",", 
       RowBox[{"topList", "=", 
        RowBox[{"{", "}"}]}], ",", "total", ",", "data", ",", "weights", ",", 
       "i", ",", "maxList", ",", "tempPos"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"total", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"rawData", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"rawData", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"weights", "=", 
       RowBox[{"weighting", "[", 
        RowBox[{"data", ",", "total"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxList", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", "#", "]"}], "&"}], "/@", "weights"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempPos", "=", 
          RowBox[{"Position", "[", 
           RowBox[{"maxList", ",", 
            RowBox[{"Max", "[", "maxList", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"topList", ",", 
           RowBox[{"Extract", "[", 
            RowBox[{"data", ",", "tempPos"}], "]"}]}], "]"}], ";", 
         RowBox[{"(*", 
          RowBox[{"{", 
           RowBox[{"word", ",", " ", "weight"}], "}"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"maxList", "=", 
          RowBox[{"Delete", "[", 
           RowBox[{"maxList", ",", "tempPos"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"Delete", "[", 
           RowBox[{"data", ",", "tempPos"}], "]"}]}]}], "\[IndentingNewLine]",
         ",", 
        RowBox[{"{", "num", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"topList", ",", "1"}], "]"}], ",", "total"}], "]"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"createPiCharts", "[", "data_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"PieChart", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}]}], "]"}], ",", 
         RowBox[{"ChartLabels", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}]}], "]"}], "]"}]}], ")"}]}],
                  "]"}], "]"}], "<>", "\"\<%\>\""}], ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}]}], "]"}], "]"}]}], ")"}]}],
                  "]"}], "]"}], "<>", "\"\<%\>\""}], ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}]}], "]"}], "]"}]}], ")"}]}],
                  "]"}], "]"}], "<>", "\"\<%\>\""}], " ", ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}]}], "]"}], "]"}]}], ")"}]}],
                  "]"}], "]"}], "<>", "\"\<%\>\""}]}], "}"}], ",", 
            "\"\<VerticalCallout\>\""}], "]"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "Bold"}], "]"}], "]"}], 
            ",", 
            RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}]}], ",", 
         RowBox[{"Ticks", "\[Rule]", " ", "None"}], ",", 
         RowBox[{"ChartLegends", "\[Rule]", 
          RowBox[{"legend", "[", "#", "]"}]}], ",", 
         RowBox[{"LegendAppearance", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"LegendLabel", "\[Rule]", " ", 
            RowBox[{"Panel", "[", 
             RowBox[{"\"\<Comment Gender \[Rule] Status Gender\>\"", ",", 
              RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}]}], "}"}]}]}], 
        "]"}], ",", 
       RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Take", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"legend", "[", "list_", "]"}], ":=", 
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"Panel", "[", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Labeled", "[", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"Panel", "[", 
                RowBox[{
                 RowBox[{"list", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"Background", "\[Rule]", " ", "LightBlue"}]}], "]"}],
                "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"\"\<F\>\"", ",", "\"\<F\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}], ",", 
            RowBox[{"Labeled", "[", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"Panel", "[", 
                RowBox[{
                 RowBox[{"list", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"Background", "\[Rule]", " ", "LightGreen"}]}], 
                "]"}], "]"}], ",", 
              RowBox[{"{", "\"\<M\>\"", "}"}], ",", 
              RowBox[{"{", "Top", "}"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Labeled", "[", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{"Panel", "[", 
                RowBox[{
                 RowBox[{"list", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], ",", 
                 RowBox[{"Background", "\[Rule]", " ", "LightOrange"}]}], 
                "]"}], "]"}], ",", 
              RowBox[{"{", "\"\<M\>\"", "}"}], ",", 
              RowBox[{"{", "Left", "}"}]}], "]"}], ",", 
            RowBox[{"Framed", "[", 
             RowBox[{"Panel", "[", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", "5", "]"}], "]"}], ",", 
               RowBox[{"Background", "\[Rule]", " ", "LightRed"}]}], "]"}], 
             "]"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Status\>\"", ",", "\"\<Comment\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Top", ",", "Left"}], "}"}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "True"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"returnPi", "[", 
    RowBox[{"string_", ",", "list_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Panel", "[", 
      RowBox[{
       RowBox[{"PieChart", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"ChartLabels", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ")"}]}], 
                 "]"}], "]"}], "<>", "\"\<%\>\""}], ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ")"}]}], 
                 "]"}], "]"}], "<>", "\"\<%\>\""}], ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ")"}]}], 
                 "]"}], "]"}], "<>", "\"\<%\>\""}], " ", ",", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"Round", "[", 
                 RowBox[{"100", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Take", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]}], ")"}]}], 
                 "]"}], "]"}], "<>", "\"\<%\>\""}]}], "}"}], ",", 
            "\"\<VerticalCallout\>\""}], "]"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "Bold"}], "]"}], "]"}], 
            ",", 
            RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}]}], ",", 
         RowBox[{"Ticks", "\[Rule]", " ", "None"}], ",", 
         RowBox[{"ChartLegends", "\[Rule]", 
          RowBox[{"legend", "[", "#", "]"}]}], ",", 
         RowBox[{"LegendAppearance", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"LegendLabel", "\[Rule]", " ", 
            RowBox[{"Panel", "[", 
             RowBox[{"\"\<Comment Gender \[Rule] Status Gender\>\"", ",", 
              RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}]}], "}"}]}]}], 
        "]"}], ",", 
       RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Join", "[", 
     RowBox[{"Delete", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{"list", ",", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}],
              "]"}], "&"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"wordCount", "[", "string", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", "0"}], 
      "]"}], "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"textPlane", "[", 
   RowBox[{"data_", ",", "count_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"max", ",", 
      RowBox[{"list", "=", 
       RowBox[{"Take", "[", 
        RowBox[{"data", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"titleList", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Female \[Rule] Female\>\"", ",", "\"\<Female \[Rule] Male\>\"", 
         ",", "\"\<Male \[Rule] Female\>\"", ",", 
         "\"\<Male \[Rule] Male\>\""}], "}"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"max", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "&"}], "/@", "list"}], ")"}], 
         "]"}]}], ";", 
       RowBox[{"Panel", "[", 
        RowBox[{"Labeled", "[", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"list", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"Hue", "[", 
                   RowBox[{"1.75", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "/", 
                    RowBox[{"Total", "[", 
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", 
                    RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], "]"}]}]}], 
                   "]"}], ",", "Italic", ",", 
                  RowBox[{"50", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "/", 
                    RowBox[{"Max", "[", 
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", 
                    RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], "]"}]}], 
                    ")"}]}]}], "]"}], ",", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}], ",", "Automatic"}], "]"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "count"}], "}"}]}], "]"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "GoldenRatio"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"titleList", "[", 
            RowBox[{"[", 
             RowBox[{"j", "-", "1"}], "]"}], "]"}], "}"}], ",", 
          RowBox[{"{", "Top", "}"}]}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2", ",", "5"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.6089954148357677`*^9, {3.608995560172717*^9, 3.608995560660766*^9}, 
   3.6090115884443207`*^9, {3.6090452346271334`*^9, 3.6090452382801332`*^9}, {
   3.6090456469201336`*^9, 3.6090456835311337`*^9}, {3.609045782317134*^9, 
   3.6090457953661337`*^9}, {3.6090458695371337`*^9, 
   3.6090458732751336`*^9}, {3.6090460566531334`*^9, 
   3.6090460676531334`*^9}, {3.609046153810134*^9, 3.6090461736171336`*^9}, {
   3.6090462415061336`*^9, 3.6090462463671336`*^9}, {3.6090462813421335`*^9, 
   3.6090462986771336`*^9}, {3.6090507721754055`*^9, 
   3.6090507981464057`*^9}, {3.609050862561406*^9, 3.6090508663834057`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Predict Algorithm (4)", "Section",
 CellChangeTimes->{{3.6089957033780365`*^9, 3.6089957229239907`*^9}, {
  3.6090521040550637`*^9, 3.6090521047831364`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Given", " ", "a", " ", "message"}], ",", " ", 
    RowBox[{
    "this", " ", "function", " ", "returns", " ", "a", " ", "list", " ", "of",
      " ", "lists", " ", "with", " ", "each", " ", "element", " ", "in", " ", 
     "the", " ", "form", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<word\>\"", ",", 
       RowBox[{
       "#", " ", "of", " ", "instances", " ", "of", " ", "\"\<word\>\""}]}], 
      "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"wordCount", "[", "message_", "]"}], ":=", 
    RowBox[{"Tally", "[", 
     RowBox[{"StringSplit", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"ToLowerCase", "[", "message", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<,\>\"", "\[Rule]", "\"\< \>\""}], ",", 
          RowBox[{"\"\<.\>\"", "\[Rule]", "\"\< \>\""}]}], "}"}]}], "]"}], 
      "]"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Given", " ", "a", " ", "string", " ", "and", " ", "\"\<Facebook\>\"", 
      " ", "as", " ", "the", " ", "media"}], ",", " ", 
     RowBox[{
     "this", " ", "function", " ", "returns", " ", "the", " ", "most", " ", 
      "likely", " ", "gender", " ", "interaction", " ", "that", " ", "the", 
      " ", "string", " ", "is", " ", 
      RowBox[{"from", ".", " ", "It"}], " ", "does", " ", "this", " ", "by", 
      " ", "adding", " ", "up", " ", "the", " ", "totals", " ", "for", " ", 
      "each", " ", "word", " ", "in", " ", "string"}], ",", " ", 
     RowBox[{
     "multiplying", " ", "by", " ", "the", " ", "number", " ", "of", " ", 
      "instances", " ", "of", " ", "each", " ", 
      RowBox[{"word", ".", " ", "Then"}]}], ",", " ", 
     RowBox[{
     "it", " ", "divides", " ", "by", " ", "the", " ", "number", " ", "of", 
      " ", "instances", " ", "of", " ", "each", " ", "type", " ", "of", " ", 
      RowBox[{"interaction", ".", " ", "Passing"}], " ", "the", " ", 
      "evaluation", " ", "to", " ", "\"\<returnResult\>\"", " ", "to", " ", 
      "get", " ", "the", " ", "resulting", " ", "gender", " ", "interaction", 
      " ", "as", " ", "well", " ", "as", " ", "the", " ", "weight", " ", 
      "list"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"predict", "[", 
     RowBox[{"media_", ",", "string_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"import", "=", 
         RowBox[{"Import", "[", 
          RowBox[{
          "notebookLocation", "<>", "media", "<>", "\"\<Database.csv\>\""}], 
          "]"}]}], ",", 
        RowBox[{"wordList", "=", 
         RowBox[{"wordCount", "[", "string", "]"}]}], ",", 
        RowBox[{"weightList", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", "i", ",", 
        RowBox[{"temp", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"maxPos", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"return", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"commentCount", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"statusCount", "=", 
         RowBox[{"{", "}"}]}], ",", "data"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Take", "[", 
         RowBox[{"import", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "wordList", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"wordList", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", "_", ",", "_",
                   ",", "_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "]"}], 
              "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"temp", "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{
             RowBox[{"weightList", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{
                   RowBox[{"wordList", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "&"}], "/@", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"weightList", ",", 
                  RowBox[{"Take", "[", 
                   RowBox[{
                    RowBox[{"temp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}], "}"}], 
                "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"weightList", "=", 
        RowBox[{"N", "[", 
         FractionBox["weightList", 
          RowBox[{"checkWeights", "[", 
           RowBox[{"Take", "[", 
            RowBox[{
             RowBox[{"import", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "4"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"maxPos", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"weightList", ",", 
           RowBox[{"Max", "[", "weightList", "]"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"commentCount", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"weightList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"weightList", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"weightList", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "+", 
           RowBox[{"weightList", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"statusCount", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"weightList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"weightList", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"weightList", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "+", 
           RowBox[{"weightList", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"returnResult", "[", 
           RowBox[{"maxPos", ",", "commentCount", ",", "statusCount"}], "]"}],
           ",", "weightList"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "function", " ", "returns", " ", "the", " ", "most", " ", 
     "probable", " ", "gender", " ", 
     RowBox[{"interaction", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"returnResult", "[", 
     RowBox[{"maxPos_", ",", "commentCount_", ",", "statusCount_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "maxPos", "]"}], "\[NotEqual]", " ", "1"}], ",", 
      RowBox[{"genderWeight", "[", 
       RowBox[{"commentCount", ",", "statusCount"}], "]"}], ",", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"maxPos", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", 
        RowBox[{"\"\<female\>\"", "\[Rule]", " ", "\"\<female\>\""}], ",", 
        "2", ",", 
        RowBox[{"\"\<female\>\"", "\[Rule]", " ", "\"\<male\>\""}], ",", "3", 
        ",", 
        RowBox[{"\"\<male\>\"", "\[Rule]", " ", "\"\<female\>\""}], ",", "4", 
        ",", 
        RowBox[{"\"\<male\>\"", "\[Rule]", " ", "\"\<male\>\""}]}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "If", " ", "there", " ", "is", " ", "a", " ", "tie", " ", "for", " ", 
      "weight"}], ",", " ", 
     RowBox[{
     "then", " ", "the", " ", "statusGender", " ", "and", " ", 
      "commentGender", " ", "are", " ", "determined", " ", "individually", 
      " ", "if", " ", 
      RowBox[{"possible", ".", " ", "If"}], " ", "either", " ", "part", " ", 
      "is", " ", "tied"}], ",", " ", 
     RowBox[{
     "then", " ", "it", " ", "returns", " ", 
      "\"\<Cannot be determined\>\""}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genderWeight", "[", 
     RowBox[{"commentCount_", ",", "statusCount_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"commentPos", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"commentCount", ",", 
            RowBox[{"Max", "[", "commentCount", "]"}]}], "]"}], "]"}]}], ",", 
        RowBox[{"statusPos", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"statusCount", ",", 
            RowBox[{"Max", "[", "statusCount", "]"}]}], "]"}], "]"}]}], ",", 
        "commentGender", ",", "statusGender"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "commentPos", "]"}], "\[NotEqual]", " ", 
          "1"}], ",", 
         RowBox[{"commentGender", "=", "\"\<Cannot be determined\>\""}], ",", 
         RowBox[{"commentGender", "=", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"commentPos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", "\"\<female\>\"", 
            ",", "2", ",", "\"\<male\>\""}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "statusPos", "]"}], "\[NotEqual]", " ", 
          "1"}], ",", 
         RowBox[{"statusGender", "=", "\"\<Cannot be determined\>\""}], ",", 
         RowBox[{"statusGender", "=", 
          RowBox[{"Switch", "[", 
           RowBox[{
            RowBox[{"statusPos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1", ",", "\"\<female\>\"", 
            ",", "2", ",", "\"\<male\>\""}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"commentGender", "\[Rule]", " ", "statusGender"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6090370826639996`*^9, 3.609037085340267*^9}, {
   3.6090439001271334`*^9, 3.6090439161971335`*^9}, {3.6090440894031334`*^9, 
   3.6090440902601337`*^9}, {3.6090441355461335`*^9, 3.6090441609781337`*^9}, 
   3.609046458791134*^9, {3.6090524897887955`*^9, 3.6090526028447957`*^9}, {
   3.6090526337457952`*^9, 3.6090526915497956`*^9}, {3.6090527432017956`*^9, 
   3.6090527876747956`*^9}, {3.6090529806597247`*^9, 3.609053129079565*^9}, {
   3.609053163546012*^9, 3.6090532532937503`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Global Variables and Initializations (3)\
\>", "Section",
 CellChangeTimes->{{3.609020107993947*^9, 3.6090201170906754`*^9}, {
  3.6090374419649267`*^9, 3.6090374474684763`*^9}, {3.6090521103306913`*^9, 
  3.60905211121778*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Initializes", " ", "the", " ", "file", " ", "location", " ", "to", " ", 
    "access", " ", "and", " ", "store", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"notebookLocation", "=", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numScanned", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Brings", " ", "up", " ", "the", " ", "screen", " ", "to", " ", 
     "initialize", " ", "SocialMediaData", " ", "and", " ", "grant", " ", 
     "access", " ", "to", " ", "Facebook"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SocialMediaData", "[", 
     RowBox[{"\"\<Facebook\>\"", ",", "\"\<FriendNetwork\>\""}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.609043640376134*^9, 3.6090436425521336`*^9}, {
  3.609044643758134*^9, 3.6090447517731333`*^9}, {3.6090520071723766`*^9, 
  3.609052028747534*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphical User Interface", "Section",
 CellChangeTimes->{{3.609025702680377*^9, 3.609025711310377*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "FinalProject", " ", "is", " ", "the", " ", "\"\<Main Method\>\"", " ", 
     "of", " ", "the", " ", 
     RowBox[{"program", ".", " ", "It"}], " ", "leads", " ", "on", " ", "to", 
     " ", "the", " ", "tool", " ", 
     RowBox[{"menu", "/", "compare"}], " ", 
     RowBox[{"screen", ".", " ", "\[IndentingNewLine]", "We"}], " ", "used", 
     " ", "\"\<CreateWindow\>\"", " ", "and", " ", "\"\<DocumentNotebook\>\"",
      " ", "instead", " ", "of", " ", "widgets"}], ",", " ", 
    RowBox[{
    "this", " ", "allowed", " ", "for", " ", "us", " ", "to", " ", "simply", 
     " ", "put", " ", "text", " ", "cells", " ", "within", " ", "each", " ", 
     "screen"}], ",", " ", 
    RowBox[{"containing", " ", "buttons"}], ",", " ", "text", ",", " ", 
    RowBox[{"etc", ".", " ", "Also"}], ",", " ", 
    RowBox[{
    "at", " ", "the", " ", "beginning", " ", "of", " ", "the", " ", "GUI"}], 
    ",", " ", 
    RowBox[{
    "we", " ", "set", " ", "the", " ", "background", " ", "to", " ", "a", " ",
      "light", " ", "gray", " ", "using", " ", "\"\<SetOptions\>\""}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FinalProject", "[", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", " ", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{"DocumentNotebook", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"$FrontEndSession", ",", " ", 
            RowBox[{"Background", " ", "\[Rule]", " ", 
             RowBox[{"Lighter", "[", 
              RowBox[{"Lighter", "[", "Gray", "]"}], "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Add", " ", "a", " ", "title", " ", "to", " ", "the", " ", "Title",
             " ", "Screen"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"\"\<Verbum Usus\>\"", ",", "\"\<Title\>\"", ",", 
            RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Make", " ", "the", " ", "subtitle", " ", "text", " ", "cell", " ",
             "that", " ", "is", " ", "a", " ", "summary", " ", "of", " ", 
            "the", " ", 
            RowBox[{"program", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{
           "\"\<Detecting linguistic patterns in social media data\>\"", ",", 
            "\"\<Subtitle\>\"", ",", " ", 
            RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", "  ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{"Begin", ",", 
              RowBox[{
               RowBox[{"NotebookClose", "[", "]"}], ";", 
               RowBox[{"ToolMenu", "[", "]"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"250", ",", "45"}], "}"}]}]}], "]"}], ",", 
            RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{
           "\"\<                                                              \
   \>\"", ",", " ", 
            RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{
           "\"\<By: Brian Carlson and Logan Houchens\>\"", ",", 
            "\"\<Subtitle\>\"", ",", " ", 
            RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToolMenu", "[", "]"}], ":=", 
    RowBox[{"DynamicModule", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"compare", " ", "=", " ", "\"\<\>\""}], ",", 
        RowBox[{"predict", " ", "=", " ", "\"\<\>\""}]}], "}"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"DocumentNotebook", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TextCell", "[", 
            RowBox[{"\"\<Tool Menu\>\"", ",", "\"\<Title\>\"", ",", " ", 
             RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", "  ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Panel", "[", "\[IndentingNewLine]", 
            RowBox[{"Row", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"TextCell", "[", 
                RowBox[{"Button", "[", 
                 RowBox[{"\"\<Compare\>\"", ",", 
                  RowBox[{
                   RowBox[{"NotebookClose", "[", "]"}], ";", " ", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "compare", "\[Equal]", "\"\<Word Usage - Gender\>\""}], 
                    ",", 
                    RowBox[{"CompareScreenWordUsageToGender", "[", "]"}]}], 
                    "]"}], ";", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "compare", "\[Equal]", 
                    "\"\<Periodicity - Word Usage\>\""}], ",", 
                    RowBox[{
                    "CompareScreenPeriodicityToWordUsage", "[", "]"}]}], 
                    "]"}]}], ",", 
                  RowBox[{"ImageMargins", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"50", ",", "50"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"250", ",", "45"}], "}"}]}]}], "]"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"TextCell", "[", "\"\<           \>\"", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PopupMenu", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "compare", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Word Usage - Gender\>\"", ",", 
                   "\"\<Periodicity - Word Usage\>\""}], "}"}]}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{
            "\"\<                                                             \
    \>\"", ",", " ", 
             RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{"Button", "[", 
             RowBox[{"\"\<Explanations and Methods\>\"", ",", " ", 
              RowBox[{
               RowBox[{"NotebookClose", "[", "]"}], ";", 
               RowBox[{"ExplanationsAndMethods", "[", "]"}]}], ",", 
              RowBox[{"ImageMargins", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"50", ",", "50"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"250", ",", "45"}], "}"}]}]}], "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{
            "\"\<                                                             \
    \>\"", ",", " ", 
             RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Panel", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Panel", "[", "\[IndentingNewLine]", 
                 RowBox[{"TextCell", "[", 
                  RowBox[{
                   RowBox[{"RandomChoice", "[", 
                    RowBox[{"createPiCharts", "[", 
                    RowBox[{"top", "[", 
                    RowBox[{"\"\<Facebook\>\"", ",", "10"}], "]"}], "]"}], 
                    "]"}], ",", " ", 
                   RowBox[{"TextAlignment", "\[Rule]", "Left"}]}], "]"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Column", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                   "TextCell", "[", 
                    "\"\<                                                  \>\
\"", "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Button", "[", 
                    RowBox[{"\"\<Predict\>\"", ",", 
                    RowBox[{
                    RowBox[{"NotebookClose", "[", "]"}], ";", 
                    RowBox[{"PredictScreen", "[", "predict", "]"}]}], ",", 
                    RowBox[{"ImageMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"50", ",", "50"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"150", ",", "35"}], "}"}]}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                   "TextCell", "[", "\"\<                         \>\"", 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "TextCell", "[", "\"\<                          \>\"", 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"TextCell", "[", 
                    RowBox[{
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "predict", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Gender\>\"", ",", "\"\<Periodicity\>\"", ",", 
                    "\"\<Location\>\""}], "}"}]}], "]"}], ",", 
                    RowBox[{"ImageMargins", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"50", ",", "50"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", " ", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"150", ",", "35"}], "}"}]}]}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "]"}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{
            "\"\<                                                             \
    \>\"", ",", " ", 
             RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{"Button", "[", 
             RowBox[{"\"\<Back\>\"", ",", " ", 
              RowBox[{
               RowBox[{"NotebookClose", "[", "]"}], ";", 
               RowBox[{"FinalProject", "[", "]"}]}], ",", 
              RowBox[{"ImageMargins", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"50", ",", "50"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"150", ",", "35"}], "}"}]}]}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"WindowSize", "\[Rule]", " ", "Large"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ExplanationsAndMethods", "[", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{"DocumentNotebook", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TextCell", "[", 
           RowBox[{"\"\<Explanations and Methods\>\"", ",", "\"\<Title\>\""}],
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Panel", "[", 
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJztnUuuOz9znk8SD7KNjLWKZOapg0bGNpBMA9gGAs+0Hq3n7EfpexeLdeOl
pZbO+wD/7/sdsUkWi8VikU2J/+1f/u8//Z///PPz82//dfyff/rn//ff//Vf
//k//uc/jH/8j//49//9L/9l/Mc//qefn/81PjN9+AQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACa+H3ebz/Pn9t9/Nf6yf32nK7ISf+7Pe+/ee7H8PO8SQktEq31D49o
jsdz+FnacDUSXfIG/d6ft0THw9Nq8u99yPpg7rs1v9QPU/+o9VeSlDnZzdjG
TkVfjHxsTCTt57rN+tTv11o2ObTxZ9re07cdL3+SLoy9pvIDYyNk249BLIPK
Zsmo5Y/oZy1g8U0s3as/Ip+n/xr42HafEfy0l34Ghy6OeWrX4RkCGHZxhs8F
H8hoI5rfG1KD6R673G/6nFM+X48+7GqxFdPZNOaG1Dk/b+FGju1jz6Zx7eLD
rT7rEQfPfoNUUh4HfxDK2NiY2q7Ox1Qhsx/uG1/Nep/q0GR0bK/Gdnh+ms51
0Vq+Nzb29mv5t2cUvXPfI/Wlld+Vf69n/Pyet8Wr30v39F+DOLa5T536xfKz
Xnoj1pyRjQU+DjtRahe99x7AhzDagmR+YmwlzKnaem9bM0xpx7OrPYpr+9Q3
zfXf6XPMllkZw4PFVsm6gsm45z3WOLuMHf3CY2B7fXy+KImtHndx35DC+yyP
Txvjz6C86Zr76De6npv7g/bRJhe3DSavaVe9UcbGRji2sp5tRYmtXNtjcFup
ye/FoUXlF8qb1V84x2dztpM/op99Xg2MGzNmCKQ325fSXhozivu1LI6w0pd2
0LRbWqc19gNzxlb+8tkUz5/gFxy76O5zwedixFaR9xrmmN7mzs22WF3evhWP
fdJ1MPVtwjvBMdaiZR9j7pCNy+35L942L8wQ/a/pL7T6f5/3uyeZMIbZGspc
b0Vw9nEmJj1na0drfc3ikPst1Zm4dnbsymtDr2dLYquiNXShjOHYSvXxue3E
8q/jzl2TVJTvjg1St1T/pJdhIGXIZxr2uoT+svJ78if7al5sVZ0e1b+PZctF
MauR7u29Rca+76OXmOrG/X2EyLjz7Kq3zwWfS8m+leCfvNjKmouL3gnSsqRy
Xd8srXFI/YG4gePt95bNb099/vXG/NpWN0Ye6y6KHwU5TB0pc0Cqh3Q9mfhT
ZW2a+aaKvkqzB/fp3xVbFcrYFFsptlNqu6q8ncqX3rOm+1ZDPi/T/Wpnzpff
J+r5PfmlPRzrXJxnZ/46ru3d0ytiqywepuM6OPZD/qvhXaCnx4hddfW54DMx
bFDzN9Jn14ut+L6W4p9IOf4emjTubZ9Zfr5K2j/+fd6H9Cx1LpuxJnfLLyDi
V93YivRFZn9B+YKxVW2/bXV4/rnHO8EmGde6tO8weLZn2U4P2z2z/Cy2YXqQ
9zxkWaSx7+Uvkt9pW+v7wFWiU8a22M5e562SPZ6Y/L1iq9pxV2JXqzB4J/hX
ie5bCfHK9lx9bEXKY+d9zdhKeJee7C8re1jyWdOxnMp9EPeMw1jvwPbA03ei
P/l8IHxfSnsdyPfUPcTzttv7teA6L1/XpeeUcz8j+ZblM8knhdbfjftW4bMp
3fatys9+lMio7RdZtufaTsB2s/LY2fLW8q2xYfsHSUZljjPiHjO/I3+0jtr3
gZ7+1w+Lx/aZZ9mz8c7GSWTsW3OGVm4JkXEXsqtdlHafCz4UYf7QYnr+vR99
/1ZOV22M7f3S+vf9DS4DO6v+MwzJmau0DaMfHpTvs1V+hys69yVnNxUfqZ4Z
mcS7K3tWkbOdmY6kPSXnLIrXJl5n4F3s8pgQRyrlF9uVQdGZXyW2Kv8Nhv4y
Fp8b5ufEAzLatmucd+pSvjc2jPdLyjOxNWQ8vyf/XAL//kZR/Va6c97sWTe2
rd9gkH4XIj0rWZqe95n7jPHbB1HfoxH3DYZdnORzwQdScm72G2ncAzkVY8+q
F9nZc3Dw18cG+Ggwtq8J+uWvcHzH7i/19jt+3+5yzOs8nLPU+ZtjA3wBGNvX
BP0CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAIRI7zMdzDvDv43tvuhvuk/n9z6Yd4xq6dIdQ/3v
LH0k93W/m2/s/6ux+Jf333s72TK/I668/69lvxJ0fLfa918YH1exTws6R3v3
HHr+X2Lz/bV3KG52Yt2JHqk/kr+0fZvuXg2/V3xu44X9xhl499xP3G/2/VJe
+usYfb/ZGCV9ukNL6ff7rbffeVwqfo/0v8d1+v+a9LehfpT3/+vtN25f+fhu
te+/MD6ubJ/pmmCJ7fX+kP27pf85LloW0nWx1ZiPxgyTvEX2IuTX5fDmt5x3
2R6PrSSSfS1yhyVf00ix75Z3+uyIbdO2JjHrqOPEzud7M9P03sy+407rIfLx
+vm90U76viYaY+0jPR/HiY7H9udxzrpe9u4QfdxtHyGk8/0qrue5Px60nbn8
JX04PI65abehgeqnfCxo+ovo3+x/qfwS+/DyO/JHMfXvZ05kL/avgfybPMn6
dtODln/T7Zh3t/39WaJDp35apySb2/+G/XqE7NvycUH72hHGt9W+PzE+Wu3T
IKI/aw6s8X9mrMv7v8R+KmOrx3DL6yyIf/L2GONLmd9a/edZpHLds7RE3yzG
zPQi9c9m21u+8e8kHiMFLLZ29BWfI+b0wnHldTOvU4o3W/atFv1yf5PGqP7e
YSS2+h3HuDkq9XRz34r5Cya/3YeT3LQP83cqy/O6Pjw8/UX0b/W/NwaWZ+z+
98ZQy96xN4b8Ah6J7JO8ZetOP386dzFdWfnXuWH+e/Yjx5y0PxOUX7Mru/99
+/Xw7Dvi42Jrb3l8R+z7m8dHs306ePpbhVbnwDL/Z8X1un8P2U/P2Ko09jXm
A1Kwat+f8O4tGddK/El1GY2t5D5z1n9KzF1q+/YeY6wNrbEVV2Na5xY31e/b
bHLbrwONdCe20uV3+lDqe1ZXyIZMbP15+jfrD4yBpQ6lz0L5W/q/w/spYZwV
xVaB/Pv6TZLVyk9tZfLBa0LSZ0H5rdhK7f+A/Xq49hXwcdG5UWu3Nb6+e3w8
2+3TwffvT9OnhZ+l6wwJw79fOrZ6sv3Ced9dkFdtX6f583QmOVfZ3h1bFc4b
6X5u/l+LbbfFVvkegr2vm6/7fMaYfrg/jQjSTi88b/XK2Ep6Z2n6AKY/T//v
nzts+e32+2PEzS+9Awo7p1j+ef4ZBsHvOfnd2Cou/yVjq6CP8+dGfXz7sdWX
j48m+/T9T8i/N8ZW/l607d/Pja1YvMf6tNh/i2PCm98SgS6wb5XbHddLbjdp
uxN/tcbV8dhK2lNKz+p5e04RvHdMsdiK6OGRj0ErfV4TGXvkmY7JHEI+tN8J
jrq3Xwf66eY7wewMSPpOUO9DEquT54vfKxt4+vP0Xz735GPf7n87f6z/dbwx
ZML7XV0bK/YXzL+3kY8dL78XW4Xlr4ytAvZ7PCePz8jawT/zavsfa3xH9q2+
dny02mcAT3+bzLWxVegdl+PfXftxZDTnn7Hugcnb8t0HMb/Rvlb/eQ58Ly0/
h+fupybpx5m+pY+k8r1zjH56ie1H4qqkXnLuMTsDYNVvpE99Pwzpnpp03t9u
nx1bPe52TG+l5/X/7La5/QZDKr9zFp/3ITtLOv/Ox7r3G9a/gac/S/+h+iPv
nCz7cPK32LdWRolrSfd7D11l50uN2MHKT8/r0TWs1AdJfnp+eirscfgW+j0a
u37ZB/GzxGb/G/br6Sdq364NOP5HG9+R+r99fLTap4ft3+050NVv8Cy65/8t
/XvfZUrbIes+/R2nQu+VjS9h9iuav676ThD05vTv97buWX05V/5+NQDNNI5v
jI823q6/b/fv394+UIX1HUxwPtA/ADoYH21AfwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+leSe
xfXu27dfAf2R/O73mfOrof6qjtM7Tvvf7UDv2/12NhvS7n9NdN1JIbDbv2u3
4v27Vxb4TbSOO29c1/BXx+0Gb7/7jHR3tZMekoFk+oQxf1kegzg+/rqOp/Ym
epnuZe94b9Zf8BuzzUyNVGxsvgee6HSyuVadwG5htxOZHsBB47hzx3WVSH97
3Irt5+PWG8utY33Kbyic94kUX2/3TE6fHfH78HwE02cZlHXhXv8wkPiR5H2m
cm359zvF97KPO8Z3Gc64E3McH5k6oWPimx/PQbJxui54bHKk98Kr9a/lD3fa
Rib/g7Yt1W2s/aPce9pY731IyzH02x01fk/15dmdC+wWdkvq4jbn1U/bPeel
bdnqcep37ePJ7zm+pfPhC8Zlt3HXK7b66+NWiYlozCvux7L42EoPEejPbG0l
5dnGzVY/jzGMdOprtvryvjh0z8e5HKOTMgV577e8L1WkeKnkWeg43TOXbHQe
L+nYoW3z6pf+TuR5PDJ/TMv32p88v8qXptv6dSm0sXBs1TKXwG5ht0q50frz
9gyJPkL1G/Yh9jfJ/4px2W3c9Yqt/vi4VfdYeZ6z96069oNZjpbO41shjrXr
F9aTAkksVWHDU1+H8pwcW32qjs31fyYn81WB+l39CTrgc5SaXxhjyfgN6DdC
iY19WmwFu9WyfobdWrGV3f/Tvhnd7yA6itZv2g/dl3P2Tk4al98cW33iuL1M
bBXIf2o/NPufWD/QPNaelXp+VdiTl+oQzzFCx7q9s/zS/NFF/p98HdUyR1Xp
h9RVbWNZ3fRjprce7wRht7DbZ0tsRZ7J/GN5/0SePfZHXjMuu427nu8E//K4
DbwTtJ4LpwfI4/JlLSDuuwr7ymshlf3grws8O/Dk35j1X2m/4bOcyh7yX9ex
pL/83cv291J2Sf1Fc4zw7sZrP9/jnt612PKVU2Jj2npxYDJJe6jzXBH0/bBb
2O1WT21stc2VXJZw/YZ9ZGWy+O0l4zIy7vb9NWPPzBonGLdF4/YSZ9l3GfV9
53SPj5+H5HuyPL+XLte/2SBdS6TnReWzd1r5iyhD8X7w81kw5611aOb/V3Ws
rwf71B/Jn8owjuvhOM8Zqp/tc99u0pxb/+4hYmOR85WJDEIHLWXkc5wF7Pbv
2q31GwzR9u/PKo5Rr9+3j8iYO3tcZnXIBqbGVpFxjXFbPqdbv8GQy/bDzgHa
6YDRa8/VqeNPd8ErdHwBiuLtC8H3LcAK7BZcGIxbhT8ybq9K6+9/Fda2xPTC
b4d+M6/V8XtIv+t94m8snMW8Vi3ft/1mYLfg8mDcZvyFcQsAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACXh93lWXqXZQk97iR/P7/LHRLqnTZCOrmLkt9Nec5v9R/37nwjmh1J92vy
O28/8W4E687RV8th3XtvyZjeZTs8h+SZijEFAABXZ5rr6aRj3C395/HuhlTS
p7k9mde5zrvzYPPXX2CKKVO7vd+Ou+OzPvgA5piFCD3HiBfrV09Gfj/w/LzU
Bu+e879+DzoA4LMQ5vnEH/K9LeIX6Xp1fp7syWzPbXsGdB8hFyEtn86JVv0b
6X2ko+xnzT+V/t+NrajeBD1t7Zs+P/RJ4gimo+FxxFa7bkh9u743PXWu/4z5
37ejPLaiep//fady5uuHdO/rSN/3vYZBTF8f6quDqTyhjKnvqOmcbfum3gMy
8thKBbEVAOCbkPZQyGdJnPP016XanozmY8V1789RZ2n96rpYo8RnN8RW2vuq
Jd+D7bcI76+2+IfEQ8szU0xBdcTeCU7znyDUYyB5mur3+8iloA/0udrft6J2
xcuZ2pzZMbMzHm+l+Rt1wFDbSfZGX2n7kjwRGSfS+E+RD7EVAOCbsGIr8TwW
X7OncxqfYzZkP+y8uwrX33ZeLHwWrOO+1S2diLN2SrFNZB7byyN6vd8WnWzn
VjK9t9Qf6iOfaB/YsZUev5p9EIg/3fwddBBqZ9IPr7P9ltiK58E7QQDA12O+
E4yd29nnHeMcUVVsVXNuiO03cBny+U9/F5aVazl3p+16bMX3nZSzQQ2x1RIj
LLqc//2gsURj/YV91NQHz7J9K57vtNjqjPNtwXeCLPEc238qeq+R0egnL877
ju/DAAD+BFlMkPq+mD9b5hZtz2rCeieYfr6sxTeRvPqzOivOiZ99JsSd14U9
pKLYhs1V2buhSa5h2M/E3W5Enub6+8x50T44JbZ6Svutabzk5Q/pYHuvGrRP
75z4K22/6J3+LmMet2txbNO+VaFeAQDgVJR3GdxF5d9vz+ew2afmE3L2nkbK
z8svqT8im62CYFw1N6fc/9P9Av4bDPw3Apb/xjl8oL8ZIOswOxtP06fvufMz
V/scJ+9TNdX/bOsHvw98O0rr19un9YH1XjSUP6CD5TsE+vpDbLnx+wbn235s
/OoySvmV9jfEVjV6BQAAcBFwJgQ0kJ2XBwcNYwt6BQCAT+b4Dp7ydsxJB3+W
eV8MvxuXs/42qKobJx16BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeCnpHb36nbAHj/QO4Asx
3dd6/TvF1vs71Dtx9PTkXt7pLuZgH2x9fOY9h9SOzu8DWUfJfcG7nvbLloU7
yc+5J4X2k6SLZMwJneLl39qp6dkqP7/bWSknufvbuJdZkN9rn1d+KD0I11Ui
2wV9mITqo9e7qV8xvif4fdxTva+6O7Xev2x3hbN7vDf7erENnDlHJWN7bNdj
+Ja7y9l976f3Wb8YZ7LbpL+necgs9xGe13txv33JfWHjmDbHlpLO+2j2cwV9
8Co/mNnSGTg6VGWY/ClVwuxf+9pV6juXMTqkgUnSb9PzqUh2/nmOmT7QdOCU
z8eRpKtlHlP0IpSf5Hfqd8sPpJcyzTE32m7Xv10L2kdUn/fbMXeePb5nf0Mq
eFU8x6nyL9u6igib2UQH3jlH8XG49E9ZbOXJ//Y5eB23r4kZ+8Q4h70q5bE1
//A4nuNjTFtT8zUP9QvpGvUnj/OENVs23zhrmnS9ftjILv/QZ53sMrbV9EdK
esSnWDqefe+d6jJvo6ajaHpUzmYcHYZjK+vZTvA5L/MLk30bjVHnTCW2Ki0/
85dO3JHLk/oMt34vrjkh7pllug/pHiatQ/M/m+8Zx9Gw2fz+LIvVXrSulmLV
RQRnfLfI6NjQKpi5F7r5junzw1+nMp7mX1b5d1vnf7fK3zhHNc9BkTHTMscG
2kd1dNYcu/se1fdVxhhCG2mMw9NLZdbH3LR2pv4y3y/L/C1ru7zmoe1+ZGMs
7ze/L7RxN5Vnra35Orl4/HrxUsmzRjrf802z2TqW/qZt9HTkpdN6q2KVjjos
ia3Ez3rIuGTI1ipi7GG9f9fSSmIrrQxpzpzKHX3g4WeEdynG2HHrD5Rvplew
ybTLlslk+J/Vp24+fWsr9XmJD990UhK7FNiVFVvZ47tBRm+vfX7G9+HZezjS
7lP9y2bnazs2HaaxVZv8S576OappDurUPy37VqfPsUn9kl9tiTH8GIePnyjm
vpXUb8w32bFVYG9NiIu7xVbKmovOAV5sGCH8Hr0htqKkvtHXsdlGT0cBHdJ6
aveBeunwtNiqREY6Jyf5g7GPkp8U1BxbSXti2zorsQ2Wn6/F6Nj06vfKj9Rf
ShZT8TIt/0OfJbay605Z05euy6N2Ze5bWeO7RcaIPwz4cLWcs/3LXn46Z975
e+Ja+VdaY6vqOYjPt7QdxnnTbrHVK+ZY5qfTcdAYY3gxDstbgmmvp8dWPGaU
ff5VYiv9XKmy15hWas/jRfP8pDc9jpfkvkpsdaoOLRkK3gm2yGiddcjmRkG3
obMSxr64V/6GNKak/Qx7zcbfCdr1e+WX1++TjfU79V+O//Fiq8JzGU22/6yM
rVrPjkTO3wZ8+Ptjq2eyf5Hsg7TIn5VniXJCbOXqr88c+87YyvyeUmuM4cY4
9eNH6u/U7oTvCbHYiq+R+DvBtHxyRldZQ+b9zt+dyvOC/E6Qj9FUVz32rcJj
vmrfKrcNbs+mjp9+Gz0deemHWPX7Vr10GI+tcttuldH9jsHYbwMbG+l5rOBZ
GGOessqnz+kxV3xNKMVSXv1e+W7927uZ4DoknaPZfr/nf9zYqmAv0yBq+3Wx
VbuMPXy45VdP9S+KrSfnrxrlX8qrn6Na5yBp/aG+A6+cY630c+dY2RbS/fIW
+/RjnJrxo6+j9HN+8/f/uX+i5yPuQ7YG49/9pnpOZRj7YBC+g6J+J5vtgUrP
GPuBtO7jTEVsDUnlL9m/rYutePvysaTpONRGb8/YTA/0gUMPHZb/BkPZ95xc
GWvOfKYDwc0vtlGITcTyWVv0tqf9qY9DuXy/fqP8QPqig9heFtXX3nfiWRDB
/9Cz4et5na0c/h2e/Lct+tp+7qfzs8KeD2uRUcof9+Gyf3iJf+Fz0y//7Dg/
1yT/81k9R/WYg0TfwfeL1fZ58gfSz5pjpf5L9Hn4gaYYw4txSPngonQ6b/Wn
gY7+NNm5WQAAAH+c452EPDt46QA6+sPM69gv+a07AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
sPK73Gko3EeS3uE6iHdbiyXehXslO0Pvcjz/rjJZR+V3DZ9z98cmh6aH5N5L
oVOSdOseYUXfXvm0DO1Oea3+SHrSD5rRNdxrapUf0Y8pX2YnbTbCbcHT3ZWp
9T+t9PJfSb8z2cv81yO5h/YV/tWFjBd+n690V3epj+7Vxs+ew/S5ubW+9L/Y
PeqX4GS768oomzbf0c9nP1Hg26b8rxj7kTvpm1F05Mow9TtVwmwHfeOrebxM
dWgyTnWSfpv6MRUp7VfelvstlTdra6D84/lljiip30uX6pdjP13vVvquX6V9
nn68/HNs1XmgPIZRBirXVMeHxVWt/icC7ztef0u3zPKSAmY7UNYNMf/1SOKC
V/lXi0wG7u96l1+R/yvmsE533dN6qB+63z4otnqeb3fdUPotMub5uoz20dz+
O12T534sXfOXp0flbMax7XBsZT3bihJbTfNs8rEzl3vy8fmopvwqXSrpeXnp
HOTGFU46L79UP27+k2Kr+31I91BpG5M9OhKLbnto4zgetjG3P8titZ907Pcm
Mk40/8D3HLJ9XXFP+SfrJ89/GcKLNpXF1VY7mYzDQ4itLPla+zjUTHuO8/dl
1v24be/kPmR7rtV98PyiOaxTbJUWKezJ7TaX6uDQTdpP4p7Xi3xDm929CKPf
ErtgOhLXZVmfpH+n+yE/5v6Dl07rrdJfib12jK2KYuxCGcOxVaZH4uO8OIQJ
FCuf1COmefUb6cwusj2oSS/DQMY7k9dLT/x/uX7c/J3fCS5NWtqw900WWz2S
OqaxNhyBySzPsd++yEP9GV/nansyhoAhu7b8j+cfJP/Lx4e3b2X5LwvLH0h7
qvmzk81QHafvBEPyNfZxtJ3e+3C9jbJM2Z5vZR/QOj5+DntVbLXWZY2TRZ98
nUXTz/cNrXb3MoL9lupImyPT51XfpqzVk7nASmf11Oov/D72XbFVoYz1sVWs
Psn3hsun/tzAa6/+zo+uPfM9jMT2sjlKT+d9/zuu2TTxxLmpIP/2fOv+dhZT
8TYJ+zbJHLc9S2TZ26bs+ZTGhKVnIRL/E/APPWIrL78la1NsJdUl2K0pX0sf
B4nqSGyj4CfcPemCPtDk/cg57JWx1ZONC6bzJB5eebVvaLK7V1Hkx6e106aj
D7LLpxznejEvldvTUY93gk0yrnXJsVXp+R69b6W5KFI+X//ZeLZVli6tm/i+
v5We2Zzh32X9xPNL8teQxRh3Oo/xPRE2Vt15t0y+Zrs+WnX4n4vHVs3vBJtj
q9Y+jtE7tuL5e8dWnzyH9T6XbcVWtJ18jEhns17tGz4itpoQY+J8bHJbyfs6
PafstT/vo7RfvPRDrHr9hfN227eiY7u/jNq5jYF8np/FFs6Wywfw5JjMKd87
P+rVH5ZPqT8vI7cjKz3s3xX9+ONAeA8i7XX+2O1OHzfeJyl7WCXzbg8/b9u1
7388/5CUL7xvyspg3zNpndfbzrLnfkL6Toc57zf2cYTWOY73oTQW6vvgi+Yw
a/4p9A1HNvsdwhxTiesR6f38Yavn+4ZviK14HJnHq/z759Qmk8/IuUrrPGm2
/6GmS/KV7T0W6V2x7fLfYCj7Tm/xWUzjbEom31FC6DyR5XfV8kM68Op30tmZ
XdnHpGV49m7KZ5xHlfXj57fOhCxNlMefWBuxh912xDNpx7gehvXsNz23OzXm
cZwt5ufD89+e6Dn2Av6nyH/k56R3vQjyh/xXAP03GAL+K7PrYY+RI/L16GML
X4ZAG1kf3m43Uf66PviiOcyIrUp8A2+XOW6V77RP8eJmS1p/nOkbauzubZzw
LvfrgI7AG8nOxALwhbx9n+GqON83O0Vnyl7Qp/1ew3s53hlAZRrQEXgT7Hs4
AHwT3p7t3+Y3/15ektzfN/D3IPz8CPoKAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPpv8LkTrntr3
0eNObKHU0N3CGpH7SOl9kN9/v9Xvfre53FI5vfye6nPubdnk0PopuZtU6PSk
HTw9a4d1r6n8TFK/dYd24N7TrI2OfM3le/p5+vq30iPylcDrsnR/ZXrr5Tps
vpvdSbeNnxf30Tnz04TnU/uXfQV/7Npt1J9udiL4G8tf9Ro39xuTa5L7YrGV
RSZ/KVN7R/t6DPLdkVb5k8+N3vVeO/aa2/cqlDs5o+mqjiZ/SZWs3Kvewjx3
TnVoMk51En89+Z+k34X0zBc4hrLM33K7Zn9Hyue64jbC01N5Fn8zpBlM+ZrL
d/Tj6d9L9+SrYfIHN1ru6ic+i6kveJzc947ct/mnbX4lhpb12bdg3LHcUuZV
/bE7noMxyhQjDff8Wc9f9fInWzli/mQd/ZP50+Rz+izxQWkMKK+Hp/zH2vB4
xtz3EWNoYc5w9qb2+IjbWqD8Oe+dPifbmNo3lnyd2pfei3k7b37wxr+THh7L
1rOtKP4mi7vZ2M5j7HG88r60G1/UL177vfkuk7dwPVVavquf/eO2+DwqX4S5
z+9DumanMmu+cRuT41gbNp+wP8tiNWfstpPHVklfhPzPYfu7P56ei/inp+7/
933/Qd+rNVltdu9r/vfcfH3+8uqPyGfNT7H20Xcnq71Jc91JsdXl/fFKzf7P
Hj8F17XWI7X+xNzLfzyyWIj7zCQP0/v0fJbOfQjfxxX63Oo7q918jTbbe/Y+
Zcsv+3tv34r7Hm3dLa+3S+TL8fJL+wtFPrxkTL8wthI/q5WLPRuOrfg8y/Ru
zqPcx071jj74Rv1sJgbxw1Yfur5EsPPwHntl+Z5+yHPNsVWnffetz/e+z/rc
8I2rPrc129ZW6sMjY98RMGDX9r6VK4Ogb+6PbP9k+39uB0Vz9NbPq4zbXnIa
W/nzl1V/VD7rcyu/ZDOaD7xybHWaP14Eycez46/2fW4tfyqQvM6z6g9i7lsJ
a5Ns/UnalYxVRaZsngr4y6rYSllXJf3AbCJ712OV/xTiXeOdRnTfLd/ba2gf
P1NWsXcbPktw1djqWdaGqtjqmZ/JMdc6TP4tb7L3YYx3qz3mGozO+RaGfmvL
D+mnQ2wVfU/vkcVUvE8s30ifJbrcZQuOfV9Gz675+Bf210r8TyDWSvTj+P+o
/xTZy1/buOr7zt/jeu8djPqb/LuXX/EhXx9bPcvOp4XGszCPh85LBfxhiz/R
54DJZvN1jbSntK/PUsN9b2zlxaNPuQ+4jZwWWwXks+uP5U+zCPuGRMbczzq2
Scu1DDAw9nrsQTe1Ya1LO4dd9g7N65s0Xd6vtM7F6OVr9sL3WG3eVH6H2KrX
+Z8sBrjTudDxjV5sVTh26+0637dK0iIyEJ1Lun1/bPVM9qeS9xDO/HW12Mpq
f9fz8p/ij5/R8WzYsmKHUX/V4k/MsSGs03Ixl3ZJc0H+mfy+oC22InWwc3W2
PcbeAVrlt469yHipb5+g/8L1hSV7xsv2raz5orBsoS5tfTOwd6t2KMnPRipn
t5/pM8dHqW3ydxnzmkDeHFLmM/s9YkS+lvKl50X9tcZWVsy7nT0I2n+6Bkz3
Rlzf6MZWfeZK367tsRKVYfaJ6vcIdP/k+f9usRWXdUt35q+3xlbPXD/ZO1SS
TzXbQrsOlfm8iD9W+zjor5Qywv6q6X0gjSPz2CiNO0c7GeTfHTB9sbonm+9X
R9KlsyrWnnr+fcrxmUSurd3sXOGvXT7VzXGugsbjMflF+VrbFy3boej8Q2Vs
Vf6d38A7rcI2iDJYv3Mg7Ykbe59ZfnFcp/aSv3v38iv71zVnjnuX7+jH03+k
f1T5kjJi+2rZ93S2NmRnhQTfSL/bsp4H2srZzzevMraMz4hde/49LIP1XTDL
Pxn+3/efZuNz/518dpxz0eYvr/5W/x5qH9PP7Vb+TrDEriNlXsEf02e1siP+
ShzHBW3odb4AgCYa960AOBN1TwD4lOwngWpqzltV2zX8MQAfwvHeRDkx4KQD
cBLzWvULf/foZPgeBubi/tj7L+vve2q222TX8McAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArsL6
+/zsN/TL7348526KTQ7z7iXj3lF6N4F257l2F21+H2peRqIn4XKJpHz1Du/1
HoOK/F79XvlWfq/9remlcFuI6fZqxO5vfokkw3l39SV2NfmWgvtTab96Y9aS
v759sk/sw2f723f64x71m+Vnes513DpfrALG/H1t+dY93AV8h799I859ntY9
lEnfW3euVzL35XonvSbj0t9yvalvXew5MddJZmIj0/M0/X7Lx2Uih5Cfps+2
SdI1XU5jZriP45qNJS//rh9Ffq98T36v/a3pNTyGsQxa7uQPP3Gcr3JP7Tkj
vOG6fyWz3RJb23xy6b12nr30sCeTM+7F/WB/+25/3Fq/V/48Jq0Ob50v9ufi
/ri0fLP9FXyNv30Hjv8Ij3Xr2Va0sVTYz3ztnM1rztiSbDt9fPQXhjySfnZ/
441rIT+vv7T8Uvm9+bo1PcLcZ/chXdNTmZM1G/Hl25r0dlv3jUZZ9meZ73jB
vtKue2bbPA7R1unpXbG3QwfiHocwRynr3r3+oXLtG7DjTH6l/NrYyt3Xivbx
SbHVx/pbL/1V/riyfrd8x3Zb54ulDN0fN5d/Qtzz8f72941xYMexLn5WWS9/
VpPhNs4BR99YewB53CDasta3kp2zdYa8ZiDvgFjZyb6TOo70/N77Jbf8kPxG
+3umB9n6bO+7bKw/sncQe7XrON5imq2t1Mffb6lNzDopGe9Buz78Ym6XWcwr
xF/W/mhavo4dmxz5i+Zwb15+Ln1i7f968rWmh/v44rHVy/2tl/4qf1xZv1u+
806wdb7w/HGP+Siu/xgf72/H9LfxrrH+LDgPYe1R81hZ6hfax0mxcVvWzovw
d9DWnCa+Myw4j5Tpi/Xd77i+SJP98qPye+dlWtOjZGPc9Y9srG/PElvdZVP2
fEr32F27ZuNEevdhxVZZTC3I1xpb2fUbeM8qMbb0bvSU2Kqkj78ptnq2+1sv
/WX+uLL+othlrScdp23zheePW8sP67+Aj/e374qtAmOzxx51Mn8L/7nj3RpL
2XpdiIOV+L3kfXvsfZb9Ts1MD+3rpPmzsWj5xIryKVd4HzhB2zyP0Tsd61PM
kfd/eKy7/ZdSa9fmuWUu8yqrG6t13reqjq08f/7u2Kqwj7ue9/9wf+ulv8wf
V9ZffL4q87cd5wtx36qt/Ij+S/l4f/sV7wQnPZfNn+F3DcZYT/YghbFg7i+O
eh/YPpKoi+D7rPzsYfo3P+Pr1eHlL5oDA22obn9L+vYOPrj+Tufgdf+GnjUS
1lTxsd5nLrXtWvYn1Fcm+dc2pN8RyGPq/DtF5Bnl3PMpsdVT0mF6bjn397JO
znonWLJ/o5plod2Gynxe39966S/xx5X1e+Xzd9X8u0Jd5wvpmQ7lm+1fCv1j
/vaNKGO9/DvBZd8DiuhDlME5c8Tf9XoyJmdqlQao77PYOb48f+z79rSd5rsf
77yV8f0csXxXfqf9HdIX2WJrK7Ed4pmx47zBMKxns+/EHiZh1rZP5fDz4/l3
neNzmGnXiU1ubaZ9SPbf6Wf3IWlzSD71e9jcZtJnqP6OcxLB/Q4ClzFbj6vj
0pavPV2Wr/SdYIndRsr8BH/7bn/cVH+g/CxdXAO1+0vd3/co327/n/K37+aM
MwUABMnONQNwFQzfWG238LfgjcDfvpJjnw8aBy9lXsu+73eYAJBZf9/T+s5s
td3C34I3AX8LAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA4AVs9zRudw8ldzJad5lfiPQeyZ/kTsmp
WfzOyE9kuZuj4s7YU2D3pAOTb7A/i29v39mU6G/y17gn7n3we6RLbf41/fda
/wz71XkMt+ftRu4fmu4j+qB5k96RPfXdce/2EYt4d5ZHuN/ee0cTbc/7Gcfv
B9lIhDP7t4f9vRtLP9/QvrP5dv292z+ezkfNixX+eb6HsG5f5Rvm1zOYYqv7
fXj+bMrhNvQYklj9dgQsS1+Mc/4cJ0/3Q+7PsliN7iedaJ80tqLMfX+ncrB+
1NooyV+zZjHKX/akfg79P8n6iOhqi63Sfbph7KtAfqt9RIbp86N8vQ+HR3Ds
Rm2E6oGmdbCxfV01DHn5Ut7C/o30n2t/LfI78HUl36sOFODqx2ufa19Ppf+f
8fHhkZR/u2Xz5Fn210N/dMzzfovZx7qXse3n34cyGzjTP+7507Vw7v9k+4jY
d8T+7Obn7ZNk08q3+i/VQeX4r/XPrI218VGL/XaZXy/KHFv9Hv+fx1aPzAcO
h9HMepn/nsffolMax/L9llnPJf0+lhvVsxVb8bGb9LHVxv2zhrja06Eg9N4f
ex4aWzG/7uUPtG/3nyQeW56Z/DKVpXDPOWQjbMxNz23ld7AxrrOs/58N/RvQ
v2d/PeS3RWTrylGPpXvz3r6LOb7WOmX7CvR/YHxYcHnmuZLNjWfa3/JMo/6c
zy37kHx2Uf+f7h9ze6Tlmf3zDNq3YX8hvH2rQPla/7WN/0b/TOSvfV/Xar8T
LfYzlXtFspiK25AQVybjlO6NrAm7rSsxacmaYSk65gvMfStr7FltXGnyHU75
W9nz+mfWZ77u2Ndtwphx8wfap44t6fOS/fGIjVhzZwcbi/jelv719G/W30l+
i1fEVpG5TV2zO7FTZHzY0H0bYc/pZPujbZCI9o81Z5n2xXRVGpuf7h95fi5/
YO1SbX9RArGVV76o99bx3+qfV1rO9Lba71J/i/1cc5Mrs9E77RceEzM9en6n
0Afq59KN/dSkLTWxldPGlfq+98tf+mDR1fzvR+5P5rXiMGQ+288fa9/HxlYB
Gzs7tvL6z7W/DvKfmX/inbFVZHwUUbIv1snHXSm2Kuv/s/1jLtOdn//95tiq
dfx3iK12udZ8875uwfh6f2x1TdK9dbafqOxhxWOr+J6TRXSdVRVbeW1cSfZt
H3KMowjvlz/tHw+rTJNsN8l3rfVLdVv5g+3TfcNkE2l9/J1KuP2KjeTn9Im/
6WBjsdiqsn/X563+8+rvIb9FMn5q3gk9bf20zm1m/695vfERln2TnxRwtv1l
ddTo71kZWwnty96xWZztH5MylvNs5thcKsj2hV37vmxs1Tr+G/3zWj616+az
7FWxVb39THmvBj2jR+Ng6Szddg5yGNazdfTs2qTYx3E+kp8vTM8hlr0TjMRV
+X6XfI7wODORtlltI7OX2neabvmzP9hsK18n0v1asc+c/Hb9/H2JsOfPzrL+
jPNc6J3+b9BGtHcO0fxP3cYi/d/av5b+o/U3yx/th5+Ks8zPp6ofX76AfXnv
nBz79nD9z4n2d5b+iuyDtW+KTUtj8zP9Y1qGkDdkH5p9B+zPIe9buq/jlW/3
n15HQf/W+mer/qCCWu13p8F+JtkBAACAd1J83upVtO4tAQAAAAC8iPQ3KK71
O02tv8kJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAIAD8X7IgjsUX0XkDvhS8ruXyT2cX3nd1O/S
37f7U26enM7vikjsQ7jftPoOVYdNDs0Okv4U7tvw0tdK1HYkehDGhylfpqdc
R0Xyl9ZfkL/H+OeyhHR/QUzbLy9Nvdv2DP/2Cmi/WvKf2b6kjybfNcoU7aKo
/PV4Prd/2Vfx19aYl+IOrv9Wf0rrkMqI+vOWMX+/Cfe1Xyy2ssjkD0LvEp30
eNw1/6WxlXdHqZOu3r06xSPUXrR75huYx+lUhyLjPA7I+OWyeul7HZrcU5tI
fj5XePJ5Y8qVT6ifFufW7+T32lfDYxjbQMfmpIMPiqso/e4dHuOrD9WBxbvu
ZZ7HDTHkbT4vnb4s+Wvnl4RxfHWfUi/srz1/xnXK03v40yPfsqYR/SV5viQ9
ytZOsS+SdfxPPl/Rz+mzRK9pjJrqdEub8h9x7vGMua4QY3CmA/6M4tdU3Xn5
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
DheXX707fLId2q+zLfUdq3M/r/dXq/OokT6PI8v22H3ak53Rx/fylXQv/8bU
5/Od3GpsJuutpv5ed2CW3Blfyv3WbieefP3kf3Qdo1Qu2p/324Vjq5XHcH0Z
vwLNnwXT3+mz57majBcui+ezUx+2rG2GNDAxffrp+QM+1/Lpnn64b8z6Mjjn
lDCN6xutd9LRxeMSDtcT1/MVCY9T69lWan2NO47YXMGen9rDY620/+z8yzPr
2JNkcWzYq5+n94wDpL7c1jTDoK/JJpL1w+12tFFcOwu+y1izWfKF0rkMXF8s
fXj0ja0oViy+tf1YRy563vvgcZSR6clrY7W8Rmxl9FvMbtY9wm0P7z5kOjDb
7NqNXv4qpKsz1a57M7bFnC+d9Ev47IAskXozH+etl0/O7/rcwrjE0z+PtSJz
Tilzmfch3eOkbdDG1jZmxrEwbGN6f5bFaif4I4qlx2XcHmNefE/Q7L86yiyM
U/EzDc9/sGerYytj/1e006TfqT/ObcLLn+w7SWNgknvsr5vW3079fA1jrZdK
0fqd1yHFe976wdy3GmOZR/KsHH/UxlZ8f2huzy7fpG+aXvFOsMCuzTXnNta3
ukm5mX9n9m+3sR47trL7zbOb5Pl13JrrCD7mnfq98j2dNa+LC/3dq2Krc3w2
8VuajkKxlbCuCbzTOzW/53Ndn76WG4kzxLW6N2eVs5W5l53FVsbYWvU5/032
Qel4bfZHQbtL1z7Su1Ye79F+a/NfNZw2Tp8F77Aa98g1+Vw7ZX36O8a96VLZ
zi+df5Di4WQdUFA/LWOzpx7v27ZytdjKnON4PCjuaxkyCntb3WIrZd9sl1Gy
owrfFbVrL7ay9uzUPvDa2IAZWzn95srMdOzu0XL9WPV75Yd05tu1R4m/u2Rs
9Sw/d6A+7/lsOmfbFcjyn5jf8rmuT8+qt/fm8+46L7bay+JlRscW0eUueyd/
VGp3PH6T1uiJflv8VyU99pf187va/n1eV5fYiq1DsrmNrRMyO2b1ePkThDQp
fqcxvle/174W6mMrLtJQsG/F941k/2LJZ6c7+imMrVrt+pTYqvP5sFQkrW/8
fiuNrXj73TZb9bvlV+hMsGtad7VdeLFOIBa6hM8+KpV169h3/LsdefnvzO/5
9Ej9R77cTxbNOUHouJ7HzZ2Ol4KxJcVWhWOrq92R+E3qg27+q5L4OE3b0lS2
UFdNbDXFquI5yuOD0Y70WCmyVrbyJyhjII2n83Fa0p9i/du7pcLxVxtbZTYs
+PPkGXqeVlkv9XwnaK9/chuuORMZteuW2IrvufCYP7JeKbULNbYK9Fup3Uhj
V21zoH6vfE9nEbv2KPF3r9m36u+z+f7APH4kYY2z7NZ483z62fkleXnzLJ8e
1o8WM0XmnMKxnY5rdg7CG1tubFW+5yRh210eG3H9bd+rpeyxawf/VUL593nL
vq8Q8TOiDM47N/M7rd751NxIA++3rPy5nPYZW65Dp37+3Xih/qXu+Pe7rH6n
a4rj/Xrarvw7xILvjn4/eZR7GOg5Zq4PXoaX/vRlzHQ6FJ25ith1vjaz3j0J
dpGMP+FcdqAfiuwi+w2GXC6r3yJ2w33K7cb06LTZtptA+Y7OQnZtUHQ+ozK2
uoLPzuw3O6Nq+OygjKpPf0X+gM8t8unG3qfWN96cUzK2xblJPFMmjK070dck
x0P//knL+PHtTvKZfC11yJ2112pjyH+17RuCz4Sv0wCYuLpdvO37a1egcd8K
/G2uPrbfwSf8xg34IPh3IQCYuKhdeHvMVy+/H8d7GXk68NLBn+WiY/udfM64
BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgC8gu5tV/w392juul9+hP++OH35X5Dfwex9MfXnp74Lf
z/qKPim9o7qGs234DBIbKRjnl4TIz+9QfYWNfYqP2cZflzvmLmAz9O7cb7w3
j9+fnNwjTO5sSe9sHp4D7nP5GB7D2XPTueVbd4kfMti+wUt/HY/nYF/g6qS/
iel+qzeN+Vfcz/lZd4DKNnL2OD+TbIxPc/8Lx0HEx7yTeV6eBBz10jMOuYLN
XPq+7UZy/T6S2Im3fY7HEFt9DNb4sdYO+3puGMz1zTYvJXF5x3XQ7Pfu092V
Qtm/9HNhT8VJ3/cs7rSNub7SeyJvQpyx3rvqtftxt30ZS9/rJY5/Xw+NMrSm
R+D7VVletgaW/GRSxiwX0THvIybX/OyDPuP0j2ijXnqbDZvt0+rf2j0+u9vO
rkujbsWGvHnS1sFmv+l42PvS6OOon7CIxFaa/HzfSdvfsfrI9DHLA6qNxv2k
50MCvDi28saNafcBvzChxlaOX+hCh361KI2twGcRWZtofbzYV+rH+HPpvFQY
U43jz1svLuWmfjCXoX7favEfPF7T2yyvLSKx1e84Z1lSCumTLNYeRWt6FGvf
6vFI2jzpk1Y564t8wPuTxyFzerZnzmOxQ89TemIPk09n+a10KkONDfvtM+pf
ffvxLmypW99H0W3I6tOIjvh6JH3e7uOIn7BIY9p8Lvbkl2KzbMwafeT5GM9G
vfZ32594YWzl6dzTqWczNJ/UJk/nLoG5pbVffRHs2GqR4eT4EZxGa2xl+ayJ
3TYq7cI76xWToS224mMwrZOu6Rv25LyxrqRvss96nnWcjs/W9BBWbCXsDSa6
s+pS9hV/WOyk9k+n2LLehgPt8+Tb8pO9GjW2MmxIHeclMuxZmD8w+zg2Ri3M
/IE+tOv37d2t37FRv/39fMhLYitX5wEf4tjM8Zgw9wR0HsGcW7r0q1e/H1ul
IhXGj+Ct8P6V/HZrbLXsm9p2L61No3vG58ZWuX8xz18I+x4+v8/7cH8aEaSa
vvTfMibnfz9Sv9eaHhNfi62mOcOyL88H+z7a7J+OsVXEhovl7xpb2TakjvOK
2CqLTcw+/vLYqjm/QJUPCZRbXFylzUTGtWMz9PO8TWXrv7q55YR+5TXw2Mo9
tzrp7Spng4HH+bHVWv6jZm7y91mLZHjKcljpx34OfZ6ms/EhnrN13gmOY8p+
HWikT3sVw9rmqe23XB9N6UH5RZ/AP6fvuPbquW9b6qLnY6z+z/oneydorw29
9OQZ1YZ1/XjtM+svia0cG7LGeamOkvdBgT6OzUG6Dr38nvyJDxHeaXp9FHmn
2OKjuvgQoVyexs9WerTYjKnTgM3QOrUzmq1xpDe39Hhn4tWfvTfd/87jTzGm
rehXcDLZ92z53izfp073ROlagH83erMvehaGf+c0QiSu8mTI2yr4JiN98iHD
kK57+FkPf1/a9ouPu7Vn5aTPfomsF6Xx2JLuyJ+3XzpnsaUduqSugJfB3YSm
4+03GNL+kdpnlO+kx2zY7l+zfVr99PP1O2BbvdLvAqg24o7zch1N8bd0Xl3q
4/AYVXQYyl8kv3AW3+ijqPyajcb9ZL0Pcb9P8jzGSsj19rAZQ6dcr7lfsOce
T+cRomejWvo1Aj/vT1IEHeT994rfoQHgDE7//n3LnhUAEy+2EXx/6fPIzp6D
rwD9Cj4RfEcDgAWMhQ+GvScHXwL6FQAAAAAAAAAAAACUoP5+Q/m5MAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAHye7
j/O6v2fW487z8/ld7gW5pXfmiveoHhfBCr8xd04/bHJoekzuTmWXrkr3MfNy
knYKd7J76etDth6MdK99Xv20jVIZiX7UO1/W+1WF8r38Xv0h/QXhuoq17Vqk
d/3qd9n2qsPyP+/0T/wuosfwHff2ZjZJfeWH2Ci9570OeU5pl8n25ROfMeee
TZv+3z0W77frxnRFjPO+ZYvq/bZTvEDnyjl+6KuT2U9NdWgyTnUSfzWNKyoS
7yPelr18Jb+Xvj9jtNtKr2kffS79e4mP0i5J/bnWl9M4HO7jHMAa5+X36o/o
r5Rp3N9ov05z14fMWRuTXoY0wD5l3r3q3dTcjpcx8h2x1QTv33kctRo+4+z5
537r0B+jXfdr9uRf0jZ3kTEp72/M6X52W69pnJvrLFlPj34t6Se2N5bIqdwL
kM0pzrpRk2/LOwzOXkgvHPsPx1bWs60otpLZwG8eH1CkWIv3G/f5Vro7r0fn
faV92Rw8+RejvPz5PF3at5s/c3Sn5bfqd/VXwdzn9yHdQ6U60cbuNm7HcT5s
Y2p/lsVqP6lv6I0YW5l7rod8++csZpVk1fRt+aeY/1n3Obc9t/vg7pGRCtwx
sbVxKu+QtaCPjPRX+Ffav3Nb8gVZvXzO/LPnX//W9sXN+e95xC3pPusox17/
8fz+DO+Hk2MrqufInKu2uYNOm222J416t2KrqZ2JfoX1P7X3bN30eLD4OF9v
R2Jca5/Ako/vdRTPSSW67RhbiZ91kjEcW2k2K8YOdI6Q7N1Jn+QafeAxZpg8
XrrTPs8uMlnFtpM2CHNvEqOIHaLn9+v39FvO1ud732exlTF2V/82/032WdO5
MO2jWUclcgfsOn8vyNfjhn9Q+knyh5FYWI+9dP8j6TTsn6Jr6i3u3dpN9Or1
kZfe7F8dFntabF/2/+3yWfOPFLvz/WZz/nvy2IrVJfShKM8b9q20voy1uV6n
22e1NuvScU73syvzlOt77LX/XoaxLzVRHVsFfGOoHx3C753fFVsVytgaW4l7
Oqztv+P6m8dGVvo2RyZ7I8IaVEv32kfLONZagt3RmMFAeqcYOcOg5Xfr9/Rb
QRZTcZ1aY5c+S2x1tw31rtqyfQ3PrsV9qx/SLsc/bDawnanQfFpLbKX6H8GG
i2KTxNZZ7M3OGFi2pvZRoA97+FcLus+Rxcmd5KuPAwLz35PsjyrPJvUba8O+
sZXvq2RbjLa5PbaqstkgveZ0P3seB+7+sSm2mvpQKZtwldhKPhsbmysjsVCP
d4JNMq51aWuRRATjvZbUX1lslq3v7HRp7UHXJ166176c3HbLzqoYth94J1ha
v6e/GrJxcqdzvTN2vdgq6INp2TV2LfmTuP/a/r3IOv/7Ied5VWxV1K/RfTe1
zID/dvrwFbGVfu6zj3yviK2W95JKPaRMS5Z+Z8vzfSuJS8ZWL/Irmwzt3xnS
fWg+f6Vty/ubnMNV1sF5bMXPZ+X9or8TtOXrMfbDa8lu+1Yx26+VUVsPDGwf
RmyL4s89Pcd8HK0zH0NeulauBG8fP2vO4e+yzTO1go68/F79RfvoQX+Qjvt1
LUvfl1lj142t+swFpefSeEzo+Yd5zA6rLied3uRzdqfEVoJ82d6Mg7S+KInD
vT6q2TdstUuvfD5uWuWz5p+kX4V3tub8x8s3vqM0xyKW77LmlmL9tsRWhW3e
5YvrdMtTa7MRes3pVj4tnuNnAOx3enp6GjeOdj7c8jLU79Xne5fuubaf/Nzc
/hmpJ9o3pXv0Uj+U/wZD2XfAIjKKMgixi/hOgdUlJ/G+ss7sanu46TN5PXq6
2z5u66mRBvogdt6JyiH5HzF/Tf3qd0pi+26inOKZNGHs3om8k5CP4/w1P6ua
f987vmaIxDPuWtTzX3M62Yf/EeJN1f/Y6SH/w+SbYruieUOynb2Bsnye/5bO
rFW371lml2nTpN8FYWuADvLp8w/Xr/xdA2v+o7/BoPuGTQZjbBhzfKl+U3mF
tYdp836bj/bU6LSPzVr0mNPBi0E/gDdSuucBrkfvs+BXAHYZwNtvN+YW6PdE
MKdfhGNNBUsHL2VeC37Jb8r8Mfhvf34VsEsTvt+ez+Prb1dqOoR+TwZzOgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAFwZfodldkendKe0dQ/vCXcA8Dtov4Hf+2De76mlS/c01N7H
qpPfyfopePdYaPe4U7v/xPvB6L2070TSb/n4vb790fF5Jf/0qfZ/Ffu1oPcj
eTry/LuQgd37XT6PJnN3hTFuthPpf6l9If0Y90iX1P8pPAbhPm7i1/gdptL4
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
aahg8g==
               "], {{0, 329}, {599, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             BaseStyle->"ImageGraphics",
             ImageSizeRaw->{599, 329},
             PlotRange->{{0, 599}, {0, 329}}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Panel", "[", 
            GraphicsBox[
             TagBox[RasterBox[CompressedData["
1:eJzs3U3O+z53mGGj7SDb6FirSLuDFFpAAiTTAmmBIDOtx3vp7NmPan3z4xyK
lEiLsu4L8Pv+/npkijqkZOqYsv77v/zvf/q3//J6vf7PP3z+55/++T/+8d//
/Z//83/9t89//I///L//+i//9fOP//n5+//7LBkW9gAAACiCoRYAAMA9MY4D
AAAoh7EWAADAPTGOAwAAKIexFgAAwD0xjgMAACiHsRYAAMA9MY4DAAAoh7EW
AADAPTGOAwAAKIexFgAAwD0xjgMAACiHsRYAAMA9MY4DAAAoh7EWAADAPTGO
AwAAKIexFgAAwD0xjgMAACgnNNYa/saLFy9evHjx4sXrutfRcRwAAADOCY21
GIf5iEkdaAcAJXBuOYf45UfODAAA4DrkzNIQkzrQDgBK4NxyDvHLj5wZAADA
dXLlzP66xriPoOm7vxy1O+rdt9Z9DVN97Dp+Xu07ueRSY1Ozbk3bfl7pdSuv
XFxTcY3wu+5xLOBXueeWuj7bnOOjafrmbIXebdb9CsWv5uO55riSMwMAALhO
npzZu2+bbvu3MU4cxqEpY8/U9cPVar2yuqbt3+ufX8nbKjI2HcbWa/yGOn4n
7xQSbIcCcU3FNcKPutuxgJ9jn1sq+2zzjo/tvHuu2EI5s7scz5XHlZwZAADA
dUrMM1vGo978o9c2Dh3HzpHrDzmYZTw7vc/Oz6hzAHZyO58NJn/nXWJsOuy3
Vg1r/4aVhjrP34MP+9u2zfb9vbR83n8z3ss1ix27LcahdpvfmD2uqbhG+E23
Oxbwc4LzpC7+bAsdHyn92l6/HY+R5ZQulbMca6/PMdU6+xaK312O59rjSs4M
AADgOrlyZqauSfgu3smvyOub3/Xb+RlxHLq+7eY5s+G7b+MPwzh9urRopjH6
8t34vB/B5S97jD8VO91ruWzCjM2ZeWbkzHDU7Y4F/JzQueXqz7b1+FhyLXO+
JrVfW3Ux7iHUy/HL0kTlzCo7nmuPKzkzAACA62TJmTnXBub9COYYcr1nzxyX
OrkucX3v/hh5rod3H8Rebkf4+54iY9NxbC3sU+C6Yqz3Un/j+kFbLt8PY8dS
u67w7rUsENdUXCP8qLsdC/g51rmlts825x7CpczUfu3mjZZcoF5O79RVZ8Xv
Lsdz5XElZwYAAHCdbDkz5TphGjM7y81lw2/tmvcjSOv3znfuy70Q6nYjf6v+
wH1Wxcam5n4b8dDuXxn3qZve03ZmHPzlw9uk+3zWZeb39cvYXWyHcnFNxTXC
D7vFsYBf5eXMqvpsc863Rq4ltV+L21XKcY/J0DneOzff5HiuOa7kzAAAAK6T
JWf2IMSkDrQDgBI4t5xD/PIjZwYAAHAdcmZpiEkdaAcAJXBuOYf45UfODAAA
4DrkzNIQkzrQDgBK4NxyDvHLj5wZAADAdciZpSEmdaAdAJTAueUc4pcfOTMA
AIDrkDNLQ0zqQDsAKIFzyznELz9yZgAAANfZy5nx4sWLFy9evHjxuu51dBwH
AACAc0JjLcZhPmJSB9oBQAmcW84hfvmVz5m9+9bK0TV993eyyEhdM22zybDB
v67JUs5V5Y/e7Vfjf8QQh7WvtO+rq/MTvtK3birnOWKU4Rgb63Sy74f2y+sP
f13f5IyB4uyx/W4/72u6AjXbl72fnPKdz9RD540bfMbUKjlnNsZa6JPK8vH4
kY6/+fgfltuLt+PVOlyV9c2/uduWylLLn+u/d7x5MdHiodW39HJtH7X1c9Xf
+JtVlla+Vs+j7VAbI051nL91dX3OHMN4E7nUfm6p/XitPX6m2mO5+No8s8/n
7yWxuGq7lXq3dV/PdE3bkym7ziPHO5nPEWePseHaVrrmPJK/iH3PN9o95diW
6/Pu24tyZtPmK/ssqax9FzH9/5HnmR2pObPxeBL6gLZca5euWZYPudjlGDWP
Nfu4k9df/vvzt671czXecauVb5cZOme4MdHjIdc3z/J5n6V4aPutrC/XX1s/
sF2lHbT46PU81g616tpufFWvts+Zgvgc+I67xvkW55aKj9dbxM9UcSwXNebM
lnzjlnOcv1f/jFmW74vMz3j1+1Nlu9r623Y/2xn/PY0TtPynWU/zu3VrecR8
Cql8q47O/sbHzV3e9u08bl6/V/zUb93WXFepnFB9zL81nzZadjktDvrcCbG9
lu8Oh+1FfoeYtl9LfYY+sPQ/rQ0C/TNQT2+/lu+Gm2bc/6Gt9vcrfGxofVdq
M2se0Lrv9vyezjguQvumtb0d79C1ddx+Bcsfl4fLmd8UPrYTjmHzGJPrs39s
u+MbrV12BfYrNA9EPnfExUE+t6bNi9L3d7i23vpasD/sHEtaPwzurxPP2HPo
sf4fIfIzVY1nxPEbe1xo/T+pPv3OZ/mPS82ZjbQ+ED3usfNhb+XctZUVXn86
5fq5mmbpH9q4wSzf6A9DX9G6gRgTKeck1jfXcmvjTm5R3m9tfbn+O+uL+yi3
g1a+XM+T7VCbeb/d/Ug5H6vjIKWc0PraWN2sa8ROqWNUddyROI5Tt/lz482l
jHmdZY5l6PP8QH3C2562v157Hihf6leHx48V+Nq5ZWe8mHq8prZ/KZecm380
lou9mGaL+ZH84RB76/y0nfPW68rh3OacI9357t53nsL61nWqsy2t/st3b0Ob
SvcbLK+oZha/X3wZ+aeE85wRN2u/nPtm/rp2Gw9KlTTjr9XHiuc2djsaB28/
g+1r1ylazH7N216W786d0PqnVs9APxzHC8t3v1Zdj2y73zkG7PF2zPweu438
fQu1fdL5T9kvtXytryTGJ7XvqseY2nfTj+2s88yE5dM+2308+RjeORdnmWcm
xE2rZ+hYkvrh7v6KcfPPodn6/54s88wC59DI4yL0GZNUn73P8h9XOmdm/3k/
F7TNyTHHB4GcktU37OXm9dt6LIjl99v16s45p6ac2XJt7o5NpP2W19fqH15f
266aJ1DGmWI9z7RDZfa/J485H+vjILmc0LhpJo3vUq6VpDFqaNyRMI5T/ep4
c673+J7P9t9teHxxpD6S8LXnwfKdfsU8s31R114Rx+vhHEABV52bfzGWi+py
ZsZvD3g5felcWyJn1pvz8AP1N34z4m3O3zrSqOJYJm5uvFkX6TpQ3a/Pe1r3
uzct/lp9nHhu1TkWh+ScWey9Wqn7ZZYfm7dSxwLy98nBfrj0h9Pb7nePAbuo
7b3bPYL6vTPSvsW2fVQeUtgvtfxQziwhPql9Vz3GgjmzhGO719plR2rObPzu
2J5bkHQMF8qZyf3QyZkp56CYYyn63K18Brjn0Gz9f7+AQzkzu/8EzqGRx8Xu
Z2dsfciZpf8t9hh3zoFmG5n3q23HqJ3HstYR19e37X5mv5dzoFK+KfmeQOm7
TaW+WZZbcTXvl1T2O7C+WH9t/b1ylFhIy+T2sd373ky7r2nn3f3zcWgcJJWj
rK+ORdcCEvIbwhg1Kme2P45T/ep4c+wn7Vi+OdctXP7x+pjr65+fCeUH+tWh
8WMFvp0zE8eLicfr4RxAAVfmzH4tlovyObPE3ys2v9ua5/+uMTfL2bs3013f
yE9Gfedkjk3EciLvJdzbX6V8816fNdca+kzT4ubt18ufS22Wq5QTqo97r5kY
5925B4n3Zjrfge7ONz6wX1Pz+PNvRFr/DNRTuzdz3F43va/tpmXB04a27dhj
wCzfrK96bLy27xBi9k07lmJygTHH/F5fOR2f/fbXjrHgvZmxx3agXaLi9jJy
h4HlzaevtSfjkOPeTG1/l7KtuYbiOehT/jtwLHV6P4zqty83F+i3X3r/37v/
2yo9SzzV4/fAcRH6jImuj1t+ZWOl0oZ9jv9beF6X1Eba/dfacvneSX19+2/+
XInQudq+ZpSXh2OSb7/PLBeP6UB9Ys6RWvn6dqV2CJ0z5Hoea4fabPtmz1E3
7n1LON+I57lAObvjptA1zivuOwNpjBp3jSPUx/wc0Df4m+PNZbvTBZh6LvTu
34ytz952z5YfuAZMGj9W5GvnltC1V5t+vGb9DY4TLjk3/2gsF3sxrebzMGa+
TUYx35XjAQLfkVm+3D+r2XZJufbrV+MD4GeExlrVjMMqQkzqQDtcLHaMmgvj
qaK49txwbjmH+OV3j5yZ+T1Ywd8vvGkuHgVYee+9Pvel/lndtkvKtV+/Gh8A
v4ScWRpiUgfa4SJJY9RcGE8VwbWniHPLOcQvv3vkzAAAAH4TObM0xKQOtAOA
Eji3nEP88iNnBgAAcB1yZmmISR1oBwAlcG45h/jlR84MAADgOuTM0hCTOtAO
AErg3HIO8cuPnBkAAMB19nJmvHjx4sWLFy9evK57HR3HAQAA4JzQWItxmI+Y
1IF2AFAC55ZziF9+5MwAAACuk5wzm5+11nR/UcvfrfFdqflsNuP5e/biZl3f
epSbsr75N3fbUllq+cYz5Lx9C8VEi4dW31zLle2a+xcTj+R2S91uoN322jq2
Hay6an3kpK6RY6ot/03m8yuHV9Pv7XZN8Rn7SdNlK8/sv9c+dzLcLmMbfLt+
O8fwELsSfWLqb9P+L+0zbMdqq532qj3/UNMxJflW/Eoef7XFmJwZAADAdVJz
Zl3T9u93K+QO5OXvVr6u7ppl+XC993lvP/97vaY1/62tv/z352+ds+0ht+Nd
H2vl22WO++JXeeTGRI+HXN98y4XtDtepyj7J8TjSbinbndtGajelPmp7Ouyc
2bSN5f+Ha6m9S6hD1+xCnILLf1Xq/l4QH7l97XPKWaHzxCWUOA+5wiv6Z6m8
WJhxnhnOMcaJwGyvUExukX+o+JzzrfgVP/4qinGtObPacou/KPd3PSXt9ofx
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
dd3r6DgOAAAA5zDWAgAAuCfGcQAAAOUw1gIAALgnxnEAAADlMNYCAAC4J8Zx
AAAA5TDWAgAAuCfGcQAAAOUw1gIAALinnx/HvdvPPjZ993e8iL+u6ZszBVTm
3b76V9OV3ELfWs+hOBf/FF0zbVNtrwz94ev+ur4J7dNJ5fvD5NeOI9hqa1+t
PsPy9dzUvi+o2W8Yz7XEL9rPj7UAAAB+1BPGce/2ezmSe1w3vvs2MUdyaL/e
7TWx2Nluif6QGp/S66eVk94f0sovr2x88Eu6pu1/LdNzyflkyOWTM4v2hLEW
AADAL7pqHDfObZm/62+aph+H3vN8mtfw3y97vpC5/vLd9jSnaM5/jPOH3L8N
r7ZvgzmSeU7UZ5vNUr6RP9DmLUn1t+YvzNt+9/Y8nqm8+ZotsL9b/e3v8q04
7MyX0uoz5Ui2bUr7a9ZFL2dHQs5M7A/u/s4L1XgGthvfH9wY2/GR6pMan9D6
Uvzd95jLtX6Stt24/nC8fOE4WubONc3Yj4c2ien/qduV2utM/fX4f84fUl90
SPu1bvfz32t9vfOYUX/1vLHM7xzqsJzXOjUOoX6eEn9zfTM2ofI12vktpR21
+qTPfz0Qz9B5Sazj3ueX8hlo1CXn+ScpzmPOrD193ngKcmYAAAD3dMk4brg+
WMfR7hyX6drEGmZb60/j+nZKRo3XE+P4/FPGu53G/tZ36DH34o3XoNs63nfw
bg4mUP+YeTz2PAd/f/1rmu3vqdcian2sMoVrLGcOQdF5Zlo8tXYPxtPfbnJ/
0OKj1qfAPA8h/m69Q/0kbbvy/uYrf9mM3y7jdfYQ1+H/533Ott1Aex2q/7TC
2i7Wus45RCtb26+/rp3f+2kLNRdr1l84T877vOWbjXyMdhxlavdl21KOKnie
cYjntwPtKNcnvh5mGUnxDJ2XlPq5n18W6zygxzPL+Sc1znPu1j0HHu4/P46c
GQAAwD1dnzPz/ujfJxa6Rhm+5x6vN+zv3e25IBE5s1DeK5gzc4tqrHkB6/yP
tfzhusfJmTn7O15zRFxkxNxjuF8f49prmb8i5OTkcnYreCBnpi+Xr03dePrb
Te4PTpmpObOY+Ijr78R/mgtpXyenzuFI6Q/5yp9p7bIsN3NmObZ7Mme21y6p
/Sq4X59ttHO+wexTSedJc7mZawnmzPx+fiT+y3b8nJlwHEUXt5ejSq3PkXok
xjN0XpLKFj6/9POAHs8s558jOTPhc/Nw//lx5MwAAADu6apxnHufyTJvLPWe
kfV3iJ3rI2u+wt59Qe41inbtYnxfLta/d/bBrae7jdj9XeavBHIqgUDL9xDN
9/yscwLc+sz3qtrzs2K3m/4MAC2ewXZ34xlor5T+YN4fZ8UnUJ+0+Cjra/Ff
nwHQrXGV+2HE77Sl9IdM5Yvt0i3LPmV2rbVsOpwzbNetf+526d1+ldrP7fWX
+Ua76wfOGwNpTmLw3sy9fh41T9c/7kLlR5VztB3V88CxZ5PExnOQ9LnTK59f
Sn8LxjPH+SewX2rdlX1NPn4fYIgFAAAA7odxXM9vGQM4bX/+4pcE5/EiGfFE
Boy1AAAA7olxnDn34PeepwagoNT5PSVZ86s4l51GPJERYy0AAIB7YhwHAABQ
DmMtAACAe2IcBwAAUA5jLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACA
e2IcBwAAUA5jLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACAe3rsOO7d
fva96bu//VX/uqZvYlb8UjnZ/HV903QXbLYZ+934at+Hyuia6f2x8Qyt77XL
EJeEslGnd/tp89z9O+G8UWX5lUg9flNZ55gHxHOQ47yKch471gIAALi5q8Zx
NeSP3u3111I1xOGMI/XvmrbPckX3btO2nbD+3dslVer+3iM+774tkBMufd6I
Kf8e8d+RevzGF2y0++ffD8mZZTuvoghyZgAAAPd0xTjOngMwvLax/jL/wJ2D
sC3/XCs223v2l9vfuW/L276NuDaV5kOM81fM+kdcl0vlhOKgsba97Nc8L+rV
NJ/rw4j5G8v682spxpyX0zV2fex9nuKWXv/3Wj93/sd+ewlzJzLkzLT5Lua+
yf0wZi7Hsr9DXOZ/z/GV2jEUf8m0zhzDcX7SVpZ0HGn9NrUdQ+uL/XN3H/zj
93g5ZnsNuZPtmDCP05j+Jrd72nkjJv6p5ec8f/qWftps54iIuPntFS5nfpN6
PJ6dKxVz/DbTSWyaU9o0Y2yG2JvvSa1Pan+Oiuduzk8/r57/vAi0Y6Acb7s7
cX4CcmYAAAD3VO08s2GMPY/xrXXHsfeWs9GW29eUU17IWj/lHijv2m66jlgu
QaK/3xeuEZPmiwx1dq6rtv+06xRr2L5VhnV9LF+Lm3XIMc8s1F7S8lWueWZK
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
POzh+gjENrsqZ6YeM3HlHG/3Ie/SjnG2fqMr+RjOdEyejP8ah2A8534VeXyl
HNuh7abEJ9ifP9toP+8151mF+792H6kQh2DOzG/35OMuU3yW9eVNC/sbyJkd
Pufmypl9Pl+al30cBT8fZjGfS2I9A8tT6vMryJkBAADc0zXjuPTfLXfv2Vmv
EdZ7eJr1d4XNe4nW766Xa3VhuVe+M1ck6V4RaX2lngNr7krM9/lC+Uvdm/n6
Vt2vofz3ci35+Xc3ldV207Lg7gWuQXPdmxl1D6B7T2X0nARlu2Y8nXkkSfUJ
blruQ3rc9u/li4nnbl3MvqjFM1u7z319WM+8hk48hkPxjNrno/XX4hA4tqe3
+fNpUuqpHtuh7SbGJ9Sfl3mBu+sHjiMtDsF7M/fO0Uf7eWp8rHY39in2vGHc
m3n6nGusn3Rv5vqb+916rhDL0e6T3zsXxZ47nOUp9fkFwz4BAADgfhjH1SP6
+3wA96DNkX0a4oCHY6wFAABwT4zjLpY6ZwZA/bT5SU9DHIARYy0AAIB7YhwH
AABQDmMtAACAe2IcBwAAUA5jLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMt
AACAe2IcBwAAUA5jLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACAe6pp
HPduX/2r6a6uRna59+uva/qm+8tWnlT+0C/GV/sutp0k7/ZTn6YP7/a7b5d6
j6/w+r/a36ogtFew30a1r+Kv65u5zd3yu0ZefmfjPh09Ls/Euc8Uz7m9DpVx
sv45lT4Pu751vkrZr5zH17fj+W01jbUAAAAQ76pxnDw+fvftT+Yw7rVfXdP2
lWTKLO828lr5c10dd+11r3a5m+j2Ori+q2u78SUU/FvX4kPO6UQu+2ycc8Tz
TH7kdP1v4Fafj792fBVCzgwAAOCerhjHWfOYxteSoxmuCZptrpBxfbB8n23P
fVrmFQ3vn/8duKaYypivt8b5CltZYvnL/BWjTsu1gVwfTdx+LWWv8fmUO84t
EOppXqOs6wTL/1yDNWaslXoK87TM+Q2dUUZou+E2sPchrv5t3xbJmcntYtVp
jP3Sv5p1TtN+/4yLw7J+TLvH9U/9uPD3Kzb+qftlt5c2H+VQ+0rmNh9i6FVT
6A/2Pm/bleITt79fbMcxZ9ZG9lu3nmac086f0fE0tqstNz8DzLK0/pbaT7zz
zDK3rWnG9h7K0M7nan1e4f6c6zyc7/MxJj52fcTjNPA5OO949PG1V5/YeN4R
OTMAAIB7qm6e2ac+y5B/me/kX0Ns6wzj9eXfu/MP5rH9OD7/jL/fbUT5Tp36
3fXFDYv75QTEmjvy17Xbda1buHeNosdtXW+87onLSfj1s+c3bH+P2C+Ntb8R
9U+5JyslZybVf9iWc93fvnsvhkv9UvtDaH2p3VP75xID77jQ9uvIcafsV7C9
nHY53L6CYK5L6A9ijkGNj+yydpxzGNu25jgq9Q/GOeX8adTJzZmIcQvEc4qF
f++uFJ9T/cQ4z4zlD+exoYw19/hW1x8sx8LQX/ZzsfnOw9k+H/fKluojnj+V
/qmsn5rDk8s58flSIXJmAAAA91RDzmy4llrnVQi5mfGaQB13z++Jul9puH5t
x/XNuVNR5Tt1T/s9ISXnZPwOk3dt8flbGz1vZri22K4nxGu1cXmOnJm5LXm7
KnV/89b/6L2ZUTkzY30rZ5bQH4LrC+2e2j+t5eZxEcyZyfFP3a9ge4VyZtL6
0ey8spf72ekP+zlF2WXtqPTDqJxZ78Y55fy5FpwnZzbO2dz6nRaf5H6inGfM
OK1zz6YABc/Dy2+v7ferfOexfJ+P4bLF+mg5M22eV+zxtScynndFzgwAAOCe
LhvHLfdGGtcoy1wRa+6OdE+ZOD8hNh80b88Zn4vlm3W07pFJu/dE3S+z/Pme
P+++IPM6xb22m7+DN+//cuOm3Vuk1FT9DX27nGWenr5dJRDi/sbXf+/+nAPP
AIjpb+49dEJdUu9FCq3vtbu2fqB/TtX1j4vgvZlC/I/eY2XFSOm36vrTliPv
FXxb94ttc24+sdC2G8iRpN6beUU7ho6J/Xsz/fdEnz8D7Zh0b+aah+rWthPL
idxnj3Seadu57p8yu+nvbTfP12u187ByPil+Hnb24eTno0Ssj9a+Wv88cHyJ
DsTzjob6AwAA4H5+YhznzGeA7Pg8HoxO/vb613Fc/IbS7Ug/+arazsO11edX
/cRYCwAA4IFuPY6zvp++930bxQjzFXCEOeek8r7GcfEbSrcj/eR7ajsP11af
B7j1WAsAAODBGMcBAACUw1gLAADgnhjHAQAAlMNYCwAA4J4YxwEAAJTDWAsA
AOCeGMcBAACUw1gLAADgnhjHAQAAlMNYCwAA4J4YxwEAAJTDWAsAAOCeGMcB
AACUw1gLAADgnmoax73bV/9quuT3/XVN33R/uSrxiUnT5yqueif292h7XSVr
PzFU0W8r327XvMZzjbtdbXlO2v4Oy4dtj6/2vbs86KvnjXffLvUbX+Ht3u04
zSFHfzsVt7t8jmSo51XnsbupaawFAACAeFeN4+Rx9udasIJru3d7g2udjGL2
t+b2+qZfjcNXrns/1+fiNrTlhXVN20sZMW35nq+fN6Ljdv/+ecjp/nYubnf5
HDl+/kcKcmYAAAD3dMU4zprHMb6Wa9ThGqXZ5lAY1yvL/AB37oc4b+Cv65vx
/VtZe+P9rfy2b5driEA5Wn3GuQnC/A9teWo5+/Xf6miXocXT2F9FzvYSCh9j
3DTNuJ9DXfbiHNqvvfiY/SC1nBr7rdRPzPkx03a2HJC0XX2/8vRDo7Knc2Z+
feY5V5+YNYH42+Vr87T0+Vt77RhzHMntEq7/TjAScj9y/7TiOe5XXDzj5uAt
8TT3s1O2G+63mrL9Le64NstK6Q+79Q+u/2kfI0ZSPPvA8jznf+H4OnA+fwpy
ZgAAAPdU3TyzT32WofQy38Mfs2/rTG+TroHssqLr4t2r4pcTqs/+tfW2/Eg5
ETvTN+v6ejz1/Y2I0epgewllj9ejQ12G/5/3QS9H3u4ur5+kl1NTv522JfUT
e36Mt1/CdrV5JHn6ob7d4HKBWJ/xOn3rw96+KOXHzjPT2jH9OFLaZa/+anEJ
uR+pnw91dvIr7VuvT+pxvdRxWWedz6Rtd6/fhhTpbxHnB2O7R86rwfp7qzRO
bmonnsryfOf/tWA/B590Pn8GcmYAAAD3VEPObBjLT/+Wr5nGsXZocK3lHiLn
a7jXA13j5Myccnbrs1ZLvhZZlp8tx6jQNifEzZ1YcwKEnFnv7q+2iYztpZW9
tKN5jSWWI+/XLjFnllZOTf3WL86YL7WWYe+jtl15v7TyFWo/1LcbXL7jbc4H
NWJWJGcmtGP6caS0y1791eKO3WMYlTMT6pN6XFvbNnNCUTkzod+6ive3UI5T
/g4kqT/s1d9bXSn/TM4spp79zvlByJmlnc+fgZwZAADAPV02jhu/3xbuzZnv
41i/k5bu5XkZ18rS99Zm2c69JBpr/sqy3UA5UfWx5sFE3DuzV05MLOd7qoYY
rmWb3/Fb9z45+1u6vSTrvn7W6aZttN20bNiMeu+hsl/hbdj9JLmcXHHI1W8D
/URsX227yn7l6ofqdkP1Sdlfd/nShmr56fdmRt1bHdF/otplN2d64BkAMf1z
L56BOIRM27TX3b9nMCIWhfubGjdtu7nqH2CXr/TPpHszI/tczPnhtZ27U87n
8wase3eNDSvL72fYZwAAANwP4zgAtxZxX1vVaqt/7vo4852QR8z8MNSDsRYA
AMA9MY4DcF/mnKtjz7u8Vm31z1gfax5SDfv2A6T5XrgFxloAAAD3xDgOAACg
HMZaAAAA98Q4DgAAoBzGWgAAAPfEOA4AAKAcxloAAAD3xDgOAACgHMZaAAAA
98Q4DgAAoBzGWgAAAPfEOA4AAKAcxloAAAD3xDgOAACgHMZaAAAA98Q4DgAA
oBzGWgAAAPfEOA4AAKAcxloAAAD3xDgOAACgHMZaAAAA98Q4DgAAoBzGWgAA
APc0jON48eLFixcvXrx48eLFixcvXrx48eJlvwAAAFAGYy0AAIB7YhwHAABQ
DmMtAACAe2IcBwAAUA5jLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACA
e2IcBwAAUA5jLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACAe2IcBwAA
UA5jLQAAgHtiHAcAAFDOk8Zaw77y4sWLFy9evH7/9RRP2lcAAIBve9JY60n7
GouY1IF2wJ3Rf88hfvk9KaZP2lcAAIBve9JY60n7GouY1IF2wJ3Rf88hfvk9
KaZP2lcAAIBve9JY60n7GouY1IF2wJ3Rf88hfvk9KaZP2lcAAIBve9JYK2Vf
/7rG+F2Upu/+ClZs17tvrd9pmepj1/Hzat/JJZdqf7NuTdt+Xul1K69cXFM9
6Tjcc4++A5Pbf+s6fzp9qmn65myF3m3W/QrFr+ZjoOa4Pumc+qR9BQAA+LYn
jbXi9/Xdt023/dsYww/XCCnXBanrh6vVemV1Tdu/1z+/krdVpP2H6541fkMd
v5N3Cgm2Q4G4pnrScRh0t76Dkd1/Kzt/en1qO7bPFVsoZ3aXY6DyuD7pnPqk
fQUAAPi2J421js4zW64VvPlHr+0aYbyuiVx/yMEs1xrT++z8jDo/Yye389lg
8nyEEu0/7LdWDWv/hpWGOs9zFIb9bdtmm1shLZ/334z3cj1px26Lcajd5jdm
j2uqJx2HIbfrOxgF50ldfP4M9amUvmCv3479ajltSOUs/fP16Yets2+h+N3l
GKg9rk86pz5pXwEAAL7tSWOto/vaNQnzJJz8iry+OQ/Dzs+I1wjr226eMxvm
JRh/GK6hpsu+Zrp+WuYtzPsRXP6yr7+mYqd7LZdNmLE5M8+MnNn33K7vYBTq
v1efP9c+teRa5nxNal+w6mLcQ6iX45elicqZVXYM1B7XJ51Tn7SvAAAA3/ak
sVb0vjrXbea9Iub4fr1nz7xmcHJd4vrevUvy3BXvHpW93I7w9z1F2n+87hH2
KXDNN9Z7qb9xbactl+9VsmOpXfN591oWiGuqJx2HQXfrOxhZ/be286dzD+FS
ZmpfcPNGSy5QL6d36qqz4neXY6DyuD7pnPqkfQUAAPi2J421knJmyjXcdD3j
LDeXDb+DbN4rIq3fO/MhlvtU1O1G/lb9gfvGirW/ud9GPLR7i8Z96qb3tJ0Z
B3/58DbpHqx1mTmXYrmuEtuhXFxTPek43HWLvgOTlzOr6vzpHNNGriW1L4jb
Vcpx+3HoPOId/zc5BmqO65POqU/aV+Aq7v3l+9+fyWPMkOzPVQEAZPGksdaT
9jUWMakD7YA7o/+eQ/zye1JMn7SvwHXMubL6HGf/bZH3KhR6rgoA4LwnjbWe
tK+xiEkdaAfcGf33HOKX35Ni+qR9Ba5TNmcWeq4KAOBaTxprPWlfYxGTOtAO
uDP67znEL78nxfRJ+wpcx77XMjq/lZozc56rAgC43pPGWk/a11jEpA60A+6M
/nsO8cvvSTF90r4C1zHmlo15rbL3ZvLMbgCox5PGWvbvBvPixYsXL168fvX1
FE/aV+Aq2zMAtmf+hp8Rde4ZAMwxA4B6PGms9aR9jUVM6kA74M7ov+cQv/ye
FNMn7SsAAMC3PWms9aR9jUVM6kA74M7ov+cQv/yeFNMn7SsAAMC3PWmsJe7r
8PsBn+XebwYoy7e52Z+X+QOgxm922ou3edbW74Uq65t/c7ctlaWWP9df3LdQ
TLR4aPUtvVyqj/n7qMY8effvMfELxWkv3ub6Wjuo/cVhtkPXbOWv5Qbm6I/b
SJjDX3r9VHvl5/pNj9p+G8S6B6PWh2V9jo+YqtX+OWIeUzX6VvxK9rnaYlx7
n8zpSfsKAADwbU8aa0n72jVt/xZ+n1Nb/m7l3yPommW58yzqNRdg/ltbf/nv
z986Z9vOb4P6ZTr/Nsoc98Wv8siNiR4Pub7llwv1GXJiW9LLimty/LQ4SesP
2xVjrLez1l9cdju4fWXvd2bdGOwpvb5OzlvlK/9O9tt1X/k84N/nWNqv5S0+
R2J/h/kC34pfjj4XVFGMb9EnM3nSvgIAAHzbk8Za6r5q43wxZybNG9LzJOb6
W1nh9cdinW0P1zpN4/8uqFq+kQtan18dGxNvv7X6ll6u1Uf/W1r89Dhp8TZj
8lbmk7n1SZ1n5v9urJnX0/pfs73Hyrddsb7MmuNi7dd++cHjMOJ3dc+XM7fJ
p57SM+DFOCzzIY19m7av/y6wFk+rfzVTP9XjGbLsR3yO8q/rdsv92ufIMoe0
aca4tW1jtasZP2nusP9dQHz/Lal8/BL63I/EmLENAAAAcnjSWCtHzsz+837O
p2uN/Mxujk27rpmWL3Wxcjti+b11z6F4/+fs7jmzd+vO0UuLnxynwPrGe8xl
ajtYb9NzMjHzzPwciV1fM9937fo6dZ6ZUL4RuDzX4WfLGXMJWxsu+xKOg71v
9rbt/VTLGfqbcu74yv2m7243J/nNz5ExTkMMlrmg1rzTdSV/mdP+R/pvKVfN
M9Ni8AsxZmwDAACAHJ401jqdM7PuzTPvJzRzJuZ1iZ0/sdYR19e3vc6fmst9
L7kMpXxTyr2Z0rZD9S29XKvP/Ac1PxUXP5u5XW39KcfixlNph0B/cUXnzMT9
rW19nZnjGWK8zrsK3YsanbvecbYcpz2tnJkaB/2+UzF/IZVj5czcKknxTKXP
a5z+XF/ObNzPpT2X3I37O4cx+ZxKfkfu0pyZEINfiDFjGwAAAOTwpLGWv6/h
eUnSfSwxvwGv3ZsXs779N/Ma3qzT3r2fO/fPqDHJt995luv1Wd4jXY6lxE+P
k7C+MyfNzC0caWetHULPAJDuJVyW1bJ+kBnDufHU8r1nPcx5zL3rdlepcpR7
pPf7i96vtXjay+VnWMTlJn7j3szX/JuFYyy6aVnbGrGY76Fd8z1S+/cH+m8h
5eOX0OfevxHjZ49tAAAAkMuTxlpP2tdYxKQOtMMNSPei/by/cd7kXpqD/nsO
8cvvSTF90r4CAAB825PGWk/a11jEpA60Q+3MeTqFnz1Yk3cb9ftT9N9ziF9+
T4rpk/YVuE743gfNeO/A475vizTPlY/9XYnYezeMN6xzoGkCAGc8aaz1pH2N
RUzqQDvgzui/5xC//J4U0yftK3A54bdRQ8/jOf5bo79v/I3Nnd+aXVm/KWs/
9142rGP+5s6Dvu8EkN2TxlpP2tdYxKQOtAPujP57DvHL70kxfdK+ApfbfT6w
/6wVNyeU+juP2jO+td/klctf5skN9Yv7bdO08g+KzZnZbxKf5RVaX3seEwDE
eNJYy/5M48WLFy9evHj96uspnrSvwOUS55lJtByYxM/JCfcZOr+3qpZv/N5C
9DPHU8o/IjVnNt/PGbvZJb/HvZkAzmCsBQAAcE+M44Av2smZpd6LuZe7GnNm
8kPio579bZc/z7eKeabR0fJfifeiJuTMplxd5D2W3r2c1z0bG8D9MdYCAAC4
J8ZxwDcEngEwz32KmncVmYuytizdC2lus2nGMsfc007507y1iPzRkfLH98T+
bljiMxXM+rzicmfWHD0mmgE4gbEWAADAPTGOAxBtyD0Vyh/xvAMAv4qxFgAA
wD0xjgOwy5ofxjMkASAFYy0AAIB7YhwHAABQDmMtAACAe2IcBwAAUA5jLQAA
gHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACAe2IcBwAAUA5jLQAAgHtiHAcA
AFAOYy0AAIB7YhwHAABQDmMtAACAe2IcB3zBX9c3n2NtON6a7q/gZprT5XdN
+Xpm9W4/9W36mqubo10A3BdjLQAAgHtiHAd8T9d246t67/ZWOZ53W3fODMCz
MdYCAAC4J8ZxwJfMeahhzlH7NhdP87qm137uR1vfmx82z21rmmZcr22b+e9d
3w7v/Sxf5r69ms7diJczW8ofX+YOKMz1zbJS93e//Hbct6Ucq/y9ei7z/z6x
aJ26Ru+vGme7nDvlIAHkxVgLAADgnhjHAd+h5XLO5KK89Z1c15CfG/Nhw/2L
w/8P+Z3hPWOeZ8szefcOSuW8XtYroqrLm6dtHtxfuUijvua9mcO/jTKHmO9v
4j3my8z1UvdXjfNWEXJmwIMx1gIAALgnxnHAN7z71srlyPOrUu8x9NYXcl3j
fy/LzZyZMbcsKmeWkt8yfr8tlBuz6z/lrmJyS259u+ZkzsyZZ5e6v2qct4qQ
MwMejLEWAADAPTGOA0p7W/f9bXOY2v4dmVtaaeu7y4d5Ud2yrOm7rrWWbX9z
7s2Uypk3kXRP5bs1yp7uAV1zSdr+ju/5xCQyqtZ8NWMfku7NNOu5tMn6p8j9
/UuIc8r8PAA/g7EWAADAPTGOAx7InQdVgSFHxVwsAL+IsRYAAMA9MY4Dnmab
95YyrwsAcAxjLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACAe2IcBwAA
UA5jLQAAgHtiHAcAAFAOYy0AAIB7YhwHAABQDmMtAACAe2IcBwAAUA5jLQAA
gHtiHAcAAFAOYy0AAIB7YhwHlPduX+Oxtrya7m/vHX37Mt/T9Htv+euarfym
idiGWtnIOgrbjXnPX9c38/rt+1gVAeBOGGsBAADcE+M44BuGHFjbv71/772t
jctDDXmuplv/s2siyxeM743d7pD/Wrcbs1/DOkv+LyEOAHBjjLUAAADuiXEc
8A1lc2bDXK+sc7Zic2b2m/p3Uh0+cTDyfADwqxhrAQAA3BPjOOAb7Hsto/Nb
qTkz477H15l8VGrObL6fM3a/lntVuTcTwBMw1gIAALgnxnHANxhzy8a8Vtl7
M4cc2va+KV+XmgOLXb9rhvxX5P5493Lu/04bANwdYy0AAIB7YhwHlLc9A2DK
LU2/mx/KM517BoA1x2ycAxb7u2GJ253nl22v/e1Y9WSiGYAHYKwFAABwT4zj
gN825OsOP0MTAHAaYy0AAIB7YhwHAABQDmMtAACAe2IcBwAAUA5jLQAAgHti
HAcAAFAOYy0AAIB7YhwHAABQDmMtAACAe2IcBwAAUA5jLQAAgHtiHAcAAFAO
Yy0AAIB7YhwHAABQDmMtAACAe2IcBwAAUA5jLQAAgHtiHAd8x1/XjMfb8Gqa
pm+6v69tu2s+223fX9teqnf7qV/TlS3/tb222L/79mX+remXP+Vsr6Gs2PeP
bWXVEcDdMdYCAAC4J8ZxwBe8Wysn1DVtv5fB0vIsKfmXbfPlcjCp9ZHXf/dt
Ys4sbbtDbmyJufnv5c+tXdaB9srKrQ+AW2OsBQAAcE+M44DyhvyONs3LmgM1
r2TOcZpeU85GWz5Y5idJc5SOzHMa5lw1zbYNs/y9eobiIK8/5Myabc6Xla/y
9yt1u6k5s1B7afbiZsX/r+ubcT+3fXZzduTMgN/BWAsAAOCeGMcB5a05mCVX
suSFhvlMRnJmyJ8t/3l4ntmwjYP3YVplj3Wd7lX0c1T79Yzaxmq6R3IpU5zX
5exX+jwzv+7bn5WcmdteMftkxE0r36yT2FTkzICfwlgLAADgnhjHAV/g3Ou3
5lgic2bmvZXicjO3Y8wDS+XmobrGyJkpZWr1jNnGtr59b+aaMwvsV9p2jbll
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
aeWnx/hQPTORcmZt2471HOretlsbrnNzvDZf5ujM/x72f8xJtPPf7L5jlhMz
P8Hq+/PcG2uOgzNHSKznMvevadY6DX+LKcef/2O8xP1q5mNGv6ac1p37xjI3
c46FtF29nkN/a8Q4a+R2lK3b/dRt3fdAPf0Ybf0/bb926iOsr87FlQsSc2ah
9rXOeU3jza/1c+3x9Yk57mLnuWrLk+Jzoa/lJpY5eU0z9tMh5mbMgsfJyfYu
qXz83tv5RjnG1xj8SIzJmQEAAJSVI2dm/9mYx6TkZ7rWmLu0m2PTxsDT8qUu
Zg5MLr+37s0U702cfS1nNtfHq0eunJlXfmqMD9YzEzFn9p7yMENOQcx7unPI
3u26zrq/zlyZZe6Ln/PYn0+jXSftzqfx5rpNbeBuL1iOF3+7jGWuhVXGuO87
85bmcsd9G+8PdHJFQrur88yE+kSJnAv417VbH3bXT72ujd6vUH2E9Yfjx8qB
7fQrdZ6ZEk+rfGFun7Nfqf1897hT4ibdNy0uT43Phb6ZmxhjNbTlMp9aOiak
ZSfbu6Sr5plpMfiFGJMzAwAAKOt0zsy6f8+898/MXZljWPva1lpHXF/ftn1t
tcyD0ss3fevezKlq2rW7UocMOTOt/NQYH6pnJnLObMuTrNfuxm+0+bmQOYdg
Xvc4fdbKmZ240DHzwmbuZOinzVTh/Xo6xHK2DQo5M//+YzePYx6jyp5M84qW
39PaycHo9XTvvd7JmQXjo7+nndsuNafr3fMYvV+h6gjrJ+eE4u5Zl3Nm4o76
1/cJ/Vw97pTy120MObaXkLtwl5MzE619aYnvcg7bO05OtndJl+bMhBj8QozJ
mQEAAJTlj7XC87qkuUhn7sOJ+r1562/mda5Zp717P+Pv+8o3/lRi5sx3s+5l
S4p9avmJMU6uZ15WOzjPLtjqOv2u2lqX8Xpc6lfKPTqvl3qP2+5+ha6rzDpt
E93kegbaSyzH3e4cE/P+xDU+877Z+7zfXutzEsxrQ2W7Wj2X+lhz+EL3Z+60
Y7CuZrlaPbX2StyvIGX91HsPpeM01L7ufZvi/hr7Fd3PQ8fdTpybrlvPE8Hl
B+Jzla/lJtbYTr8xOcaqm+fHtspxkqO9CysfP/2zyYvB+zdivGwTAAAAZTDW
8hGTOmRrh715OA+zP88MgITPhnOIX37kzAAAAMpirOUjJnU43Q7WnIDCz1Gr
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
QE04J51D/PIjZwYAAFAWYy0fMakD7QCgJpyTziF++ZEzAwAAKIuxlo+Y1IF2
AFATzknnEL/8yJkBAACUxVjLR0zqQDsAqAnnpHOIX37kzAAAAMpirOUjJnWg
HQDUhHPSOcQvP3JmAAAAZTHW8hGTOtAOAGrCOekc4pcfOTMAAICyGGv5iEkd
7tAO7/ZzvdJ0xbfz1zV90/0dfv9Yz9f2OlNWSHI9323fvs8tH7a57VvTF9q1
Mv66vgm0x9l2T/WN/tw1ZftgSXc4J9WM+OVHzgwAAKAsxlo+YlKHXO1QNu/w
7tsv5MzO+9Tz1fZv798X++v6TqpI9HIz/sN+bTmzXO1eOm/17bxYeLtf6s/v
lpzZAxG//MiZAQAAlMVYy0dM6pCjHew5SMNryxUt813GlzF5yVxuXtebc7Wa
ppnnOw05hs+/l3KMfINY/jyv6GW8Zy93IM3LceeN7c8NknNm5ryiaTtbfOxt
bLkobbk2f0iL5xSPd/+Wdj9hudnGS/mx7d5sCTaxXULl+HWb54w1zRiXtm2s
bWhxkOqvxTPU7lv5zacO4brq+5XYn0Xv6f2fchqtfwo5Myk+of3V+mFJfDac
Q/zyI2cGAABQFmMtHzGpQ8l5Zn7O4OXfCzjkQJaFn2v8LU/gzm3a3ts1U+4h
XL79nihejkHebqCALQ/i1sXKi6TlFL3cSWj+kBnPQromYZ6ZVx+5XVLmgY3t
PsRz6C/D/0v77Cyb+oqS84lsd6uOY+5uP4ekzjNL7s9i4VYdvG1F9xO9n8fn
8PLhs+Ec4pcfOTMAAICyGGv5iEkdSuTMhrkp6/wh6Tp7mW/kXotbOTOTnHNS
yxfeE0XMnZj5g5ic2bzOuI/mvKLOX8fbvJyD8Za79dTimYuTfzLrI7V7uD5y
u4jlqNWZ113isNQvsN0pz9YYbWJWKa7d3ZyUmTvcrau1X0f6s1h43xjl7ObM
1PjE9XOtf+bGZ8M5xC8/cmYAAABlMdbyEZM6ZGuHId8l5CrEe7vMded7y7T7
xIailmXWfXxzrmC3/L17/QZuLsHZ7rA/7nblENjbm94z/duar7OUo+UwYpcv
c4MC8VzrJeRiopeHcmBSu2v1CbWL0n/0tvq0dTe9p+2mZW2rbHd9BkC3zgNs
38fa3W7HiBySsF/J/Xk3Fs49lYn9RN3fvdyneDykLvfx2XAO8cuPnBkAAEBZ
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
C23G+V3yoqfYKY/DT80PbfLYw2f4hrVWbdCkD+gHAOgJ5qQy0K8+7/KZJeU8
TsghLeV78fOK+HljrPzRmeUnNE6817fuvSL1qjh75a3nJmTklw5pJDdJ2efv
vpfQB2l1GHv0pXYl5gmP9Zme/3m+Nx3EvOJvyfOc6jP70Hhwy5nH8Zmvxzie
kN97bYbtl7hiT3AueP3ffN6Ddn5uP6rjJyuP/f6MiOHsy1C9wbljj1Oc9Up5
9kTeOJftd4+n5WkXywnoJs0z2jivlU9eH4dx3dzrV3+2TR5SHntNnxCe/hnf
hXK/2+2SdEjrl9d14MxZ3wprWB806QP6AQB6gjmpDPSrz7t8ZuL9mJLfJjfn
9EwwRkXKb5NZfpBEf4eaGzsRO+dMfn7pvDgeJY9xICdRbpyQbKfeLilPeHaf
KfmfQ/mo5fIr53m+EGf21vFg9bsSc5OQ3zvWnpz8S/pcMBp5izSf7sV+VMeP
X5ZgtJPH/vQ3xNoenDtex84/Y76Z3HEu21+Up92b9wTd1HlGG+f18smrcWah
cSJcv5d+f4lg5rHXc8NFcPox+p3kHNvbPrfPq1PMfRbpF+da+GZYw/qgSR/Q
DwDQE8xJZaBffd7lMzM57usCPrOcnNMz5hrc2/cl+Mxyy480KNlnJubGTkT3
kaTllw5q5H9SzmOc6DPL3Zdq5WdW2+X7avL7TM7/rN2Lvy3Pc1WfWYPx4PS7
YURWfu9Ye1LtCfb7y6bx9VlTn3r9qI2f7b1aeeyF9upzx1Zv0nySOc4V+8N5
2sUGhPPVu7ol+czMvruST14zVRqHIV/+M3r9Xt67quWxz/WZxfrRHVeh/trj
05acZE67RJ9ZnX75Bly/NC9evHjx4sWLF6/7vJoSWH9rezOTc07/Owryy5dy
Ek8XyxfJeH57pF1pMg7WuVn5pTWNtJYF8hire4Iyyo/mZ3bbpeUJd+1JiFeQ
8j/vZQybr0Vtb1GeZ1HpazkAnu8dD74O1/N7ByoosEfIv+HUl9+PMmL+8Mw8
9l6/JOzNDM0dq+3xsZM7zlX7n8p40yuWy0m9riPzw6V88im2Ont4Pd20vPcx
H2Hq/JDz3Znapl3/cdTH1aj1uzJfKTqk98vv+MzABk36gH4AgJ5gTioD/eqz
r1mhf1wfCfw2jIcbkxljGkWLAwS4Ab8UZwY2aNIH9AMA9ARzUhnoVx98Zp1j
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
8P+8/h6m/ZPG39r5+/9f701O3fP9ufF5v0znb6PMpS2+yQs1159ZWs73rMf6
3rB9Pi62Y9OlWGNNG70crc9r4veDbec7bPgFZl9kzfu/Hvrlin8qNCdkIVzv
nyJXh+79eh/mFr6Jjsafy7v0q3Yta3SkMT4zAAAAgLaoay1tTSj6zKSYI93H
Yp5/lhU+fynWqXteFw/bb75/1meV8p24Le3n5+rrzwwt4+89ng/Rble/HI11
beRyPhNnttrp17nHFMz2nX9P67nDcMbumT7I7b3RadseQ+DWYce4yWPZPC7F
InhxcpYv8yxjHdPhez5J/7Ty/f6S/CRauzTO8sfnOPo6uPX6xx96fwXKkey0
YkyceE1FzXNcKf0Yt98ST/CR1xkPOf0S0sG0X4srtefavOtCQ6v3LrzNN7HH
/A3Dout8TWnzlBTDrI2/lvN1Cu31y7iWv0RjfGYAAAAAbanhM7PfNvwwig9s
Go3YpaiPTVsDr8d3W0w/j1z+09p/6O41NOnBZ/YYhfv8zX7/Ft1vT57GT1Ub
VUur/jZxRbE4M8eIxecw37eMp/PvdU902mb7htbxo+1n9XSo4jux69xjISy7
HJtF5rY6fov1v3r5Wrs0cu7/LPuNvZlavao9Sn9d6ZcacWbZ9u8kX+/54yH3
vjyqgxXburfNHn9X9E8wzKr3LrzTN7HoPs/Xezy1pJl0zBlnV67/VrxLv6xr
+eYa4zMDAAAAaEuxz8zaN2ju/TP9Lc5+P9PnYJ4jnq/XffoK1nIfu99AKd/k
XXszV9NyfWa+f2qSYo+8PZuGP/Gqxs+Evgr0eU1iPjPTTyrGxzh2ej4zZ1/v
UkbCjY7mI/SOiz4Sfw+s69eI6hn0mcnll8Q9xHyimv1avao9Sn9d6RfTptS9
p+J9do79pyEZPrPr4yHFVy3q4D430fWZLbF+zrMUC64Lo3C13rvwbp/Z0l/7
uNl9NzEdJX9OJ1p/1GemXMt31xifGQAAAEBbZL+EHtcl7XnQ9vNox7X9fupz
7q33zPsy06bY3s/0fUH11p/5Wu5t1Z7Pv77k3ADanqncvVelfVULtx/8HACr
r2g/bsUkSfc9uz8moKe410y7f0o97tg5n3fYudlkxesk7HEL7s0Uys/aQ3fB
t2HbH683SWdlr3G0X9YPZNivX49F9v+Z8XMVxsMVn5Okg3ls2wtr+tKOfc1/
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
g3xNk3xO5zjI1qimz2y3ydQh034NbUxsbz7HbdyY41yPtRJ01uwP2CPqHLwG
0ssPVGx9Nu6bTIfvhjLQrz74zAAAAADawlrLB036oOrezNfN8RFXE9gPt72R
tX/Lig/7M+7PpT2e5vFt/6G5j1HdJyfszfT3ckr2mJ/J2e+Wue9Qatc4bra/
Pjut74/T2p6grFqbNU1dLbTYPaMsXSOteTX2Zu7NG7xzc+1PstOpYynL+bx4
fkBnzX4N0X7tGgiWnzF2Az459mZ+FvSrDz4zAAAAgLaw1vJBkz64Yz8Ux3W5
lMTb3JVvb7MT73Q7WtvfsT53nJN6Av3qg88MAAAAoC2stXzQpA9u0w+ZcWkZ
BRtxTL+Sm/GL22zFP92wba3tv4E+t5mTOgX96oPPDAAAAKAtrLV80KQP6AcA
6AnmpDLQrz74zAAAAADawlrLB036gH4AgJ5gTioD/eqDzwwAAACgLay1fNCk
D+gHAOgJ5qQy0K8++MwAAAAA2sJaywdN+oB+AICeYE4qA/3qg88MAAAAoC2s
tXzQpA/oBwDoCeakMtCvPvjMAAAAANrCWssHTfqAfgCAnmBOKgP96oPPDAAA
AKAtrLV80KQP6AcA6AnmpDLQrz74zAAAAADawlrLB036oEY/PMbX/cQwVbCm
L2hXG/5Nw3EP+jc+PmaHxqf1cYnZM+s5TP+sY9Ow6useb85jfJZ2Kd8NZaBf
ffCZAQAAALSFtZYPmvRBnX54PMeOfAwzkh8hn/7aVYfPtmsaxmd/njKTevp8
dBw+xvf7zJ7/ntNU1rt8N5SBfvXBZwYAAADQFtZaPmjSB/V8ZsNz3GOHjPv7
Pd7ljHl5rOe9zh+s87Xjz/O9v9nXsp8Xjrs54piOz20ljX8ZMU457TLqfZV7
1LPVYZ6fVK/SXsl+Mw5prSfmk9Lb5ZX/b1r6Yxjmtr0+Mw5Wm6+1a38Nz92l
I/bLVvefYWvMByT1S9CiUbInQ5+AnaFxqNu+2fAYjTri41Bsq+Azy+uvEPp1
+G+ainyifDeUgX71wWcGAAAA0BbWWj5o0gfVfGavcvZbcDGOaPYrWD6G019y
xOJox5cqzj1fj/E8R0OM75n9EIafYPZ/hN0Gme1a/juefpftuO87idX7lNur
2m/HIcXjuJR2KeUv9s/lz+/P/25tvtQuyb5gv9i2JuP0i26L5EPK0ydkZ1ac
2ebjWmx66fwYd50i41CLJ3OOX+2vbB5T9PoMwXdDGehXH3xmAAAAAG1hreWD
Jn3QYm/mcU+/x99IcTnG+ZbPTDpu1pHoCzE/O/s2lr+v+Mxy2rW9N24xRmdz
hwsxPUJ7k3xms38lJc5MaFfAZ7brd/TT7jO74HTJ9pml7ksM9UsCpy82T5+Q
neI41C14juO4lGM/wyziE83xmb3j+XH4zD4K+tUHnxkAAABAW1hr+aBJH1TL
AeDuR9vjko79ZOueyzOezPBt7P4A7fhzf3uw9vNFjBJ9Jzl7M7PbtbHHCUll
uXsSQ0jt1ey34qWUPXPRdknlH33ysmNa2z1O67H57bx2Ze7NNHVO2NsY6xdB
YNHHlqVPzE5lHGos/bgKa/naRHtc+/e4Me24a7/VX/E9z47Y7M3sFPSrDz4z
AAAAgLaw1vJBkz74SD9osWKxGDInzufr+bX2whfw7zmN07Mk8wDfDWWgX33w
mQEAAAC0hbWWD5r0wfv7wYw1MuOGtONPJ26m95yLFfi19sL3YDyH7yp8N5SB
fvXBZwYAAADQFtZaPmjSB/QDAPQEc1IZ6FcffGYAAAAAbWGt5YMmfUA/AEBP
MCeVgX71wWcGAAAA0BbWWj5o0gf0AwD0BHNSGehXH3xmAAAAAG2xc6rx4sWL
Fy9evHjxutMLAAAAANrAWssHTfqAfgCAnmBOKgP96oPPDAAAAKAtrLV80KQP
6AcA6AnmpDLQrz74zAAAAADawlrLB036gH4AgJ5gTioD/eqDzwwAAACgLay1
fNCkD+gHAOgJ5qQy0K8++MwAAAAA2sJaywdN+oB+AICeYE4qA/3qg88MAAAA
oC3iWusxLseH6V/S8cdo5G8aH+cb/6bnsB23Dw/H+eZx7XzzPbduqSy1/M1+
sW0hTTQ9NHtrHVfqNduXokd2v+XWG+i3WF9n9UMRj+do5RkbnmbV0+Bo8EZm
jUI6QIBlrNp9Cdd4yzi8eX/17ptY5rHIvPpJ3qWf+b1Te17vTWN8ZgAAAABt
kdZa0zA+H697G3dNqB1/jPI90DTsx2d/xeuzz+3vYdo/afytnb////Xe5NQ9
338Zn/fLdP42ylza4pu84Gqi6yHbW++4UO/sa1LaJOtxpd9y6t36Ruo3xR61
Px2a3AcIOqyH+7kHqkktP0jPfj1tHJfQc3tTaG1/Sfkt+utd3MI3ocxxPfAu
/ULf71XoSGN8ZgAAAABtUdda2ppQ9L1I8Uq2P8y8TzLPP8sKn78U69Q9r4uH
7TffP+uzSvmGP2e+59N+ftZi7+x2a/bWOq7Vaxn1fBht0PTQylHjzDLrNY/b
PlC9f6T+dHmnz8zyAewxcMOwxMSM45AcV7DHIMyfW9u+jjlNaylmwTrX0U4r
X8KKtfizzw32fWo5e3zhS6fRut72mL75vO1v0Xcq6XZqkabDuPRPrGs03cx6
dx1CugniBMZKpg6qnrKdvkarDvn9pcfOWHPpsM6ZIX00O3P7q1fe5puIzEHS
9XIg/r6Tfr23pL1+ejyxp8GXaIzPDAAAAKAtNXxm9ttxX9A0GvFKUR+btgZe
j++2mD4wufyntTdT2ke4cwuf2daWsw26HsFyiuvdD7uaavaE90iavNNn5rL4
BeZ+2WPl5vurBN+S7Xfb2jaX4fg5wn2zanSM5y1mQi0/1SajvqA9qeUItpp1
7Mey4oosnRN0SNjrp+nm+37s/d2pcSTBsZKtg69nyE7tPj27vzZbvTheZX6W
ytfszO2vnnmnbyJpDpKOOf0YGj/v5lNxZqGxeXeN8ZkBAAAAtKXYZ2bt2TP3
GZq+K3MNa/uxrHPE8/W67Xv9PfZJL98kZ2+mVHfI3lrH1XqV+CJZD6WcQL9l
1evt2RTiAyV7lDpMPu0zW87bz8/1mT0NTS/5zPx9xGr5iTYd+08LfWb2Plbb
l2K1IdHXaD4Pz4tVraCDdv5yn6vYprc3cK44VjJ0MM93yk+JWzF9cvn99Yz4
zGyk8jU7r4zbXnm3z0wcV+r1siH5cz4YW2byUZ9ZaGzeWGN8ZgAAAABt8dda
4bguKT5Ieza8dlzeO5n6bHvzfsu0Kbb3M7LXQtWkXrvzjiv1OrFyf95z30r7
Lb9e/XnLcv/o/Rnqh1LS49vO+6X1mWtLzMC0HovdFllxP8qYPDRy78u28o9z
X/85dNr8HFr5erNHsW9y9maq5QTH4t7HmTYOw5EbIl2Hv6y9n2q/mLYqunkk
jJVLOjh6inaG7utz+ksZh369fl6R4LjS9sUl9FevvM03ERpXo3y9pPfj53yW
7fXT53lPg8d3aLzXWcpif6Xrsrc8CbV4R7su5a94Y/xuzXGSwyfzNNVCGz/f
cL3kjNs67c1Y0z8/N253NH1ynw2ben5Rez+wH6CWPnCNT+RNuuO897Z7gBuB
Jn1w935oHU/TfbxOIE7pk7xdt051gHzuPid9GvSrzxWfmXwfEohBvUKFPAld
3i81zv9wNX/F+3KrVB4nqSTHanfOxefe9EDoeswet7Xam1zOh8btRvO8NB5l
7X13rqaW+nT5PSLwSTs/ljfpBvOeCWtYHzTpg1v2Q2p8Uq/l18CKxXj3OkHh
E7r1qAMUccs5qSPQrz527Gg8tkDP4THfY535QeScK3mxT6E8CXrem0guk2CV
RvnDIMcAbgfNOIzzuRN7rpbhnLsT8inl6qPmzcqIm7HrtXOryDrrOWnyYiTT
xon5LNu9nWbseLZui89szBqf0vFQbiG13m1MpObmyc0fIh8vy6Xk5TRK1F/T
JzhvCONWvr4SdMgly2f2gXGbkJcmNwdYKFeTtccocz5PztVUM/dVpj6h67HF
90itPEKXc3dp5QR0SGpXwfdOzves8aFkn1l8fMZzubWCNawPmvQB/QAAPcGc
VAb61WdfK7q5UkKocWZCOZfzG4TuZZ2YofxcJnJ9Ys4S9fmdfp7vc6+6/GxI
qV3Z+kSeJ5r6e39SbhU3NkvJSXPFBxAcb069/6bxvI93fTmpuv3zn3lwPEdT
KEcvP8H+SJuT7U/IHxI8npFDKJzTKEd/XZ+8ODPl+orpkEuOz+wT4/YZqE+0
P2Jnso8hbz6/klurXu6rHH38toV1yI/fCvqepXlG0KFW7q7weAvk9HKp9L2T
/z17fi5l3ksan4m53FrAGtYHTfqAfgCAnmBOKgP96rOvE8/fpPN8ZmeOEPke
93J+Aynv0J98r2B/LCWXiVyfWGaSz8zIN+PkR0rymeXo08Jn9jSeORDUOZ6T
Jn6PG/I1KvW+3hs3/5b1nM8c3ZR+CeX3kMuXcwuFycjNk5k/JHw8PYdQUM8s
/XV9Qtdj2Gdml6m39wIX92a+bdy69UXtj4zPSHvP6zdvPr+cW6tK7qsLPrNI
zOXl7xGlnNw8QrVyd4XLydh/28Rnll5+ls8sY3xG9UmIv8uBNawPmvQB/QAA
PcGcVAb61ce813NzpagIe9X3fRVW7M6VvXtangQl10t2LpNgs+Tfm7U9I2Ju
EteeXcuK+R/q7800bNV0PrrHyUmT6Mt0bffGSaTexVZnXOboFsojo5UjHQ/l
FlIa7MQxRHLzpI7zffwExpXYXwl9I+mZqn9QH/F6jO+tC15ff37cTNqz6y/k
APjAuFXtzM0Bljp+Cubz5FxNNXNfZeqjXo+1vkcC5WTlEXooOl+wMzrPOPOS
qnSDvZnq9+A5ELLnvbTxmZrLre5zceY6wAZN+oB+AICeYE4qA/3qs68VoRLf
8qx5DXLS3Av6C+4I4xYakpLLLTemMAXWWj5o0gf0AwD0BHNSGehXH3xmNTF/
c/+yvC3kpLkX9BfcEcYttKKDHHistXzQpA/oBwDoCeakMtCvPvjMAAAAANrC
WssHTfqAfgCAnmBOKgP96oPPDAAAAKAtrLV80KQPbt0PCbmaU8pICj81YqGz
927XsBOqkpsXu7Sc5fmZqbl3nPJT46T3Z3fWfrbAu7n1nNQB6FcffGYAAAAA
bWGt5YMmfdBDP5T4L+I526OVP6eMLdvTOC2vXIrthJuj56sOjf/k3NRHNZVy
y3+QHuakO4N+9cFnBgAAANAW1lo+aNIHn+4HK47GeZ5lPHf9+BxHOUfu6TfY
nzc8lyvk2P73OprqYtj8EbPNcr5eu2zNTqVw1U5JBzNuaa0n7lsR9dnj54bh
eC7z/p6VczghGE/WX+bo91e5Zt5vtV7Vzkj/Buw0bQz1Yywns9vW0/7hOQyG
bYbte/n6+JdzU0f7HZ/Zz4N+9cFnBgAAANAW1lo+aNIHPfSDGGfj5FCefQXz
f61ztT2Pbh57Y/9lSbyX7MNbfRv7f/e4oCQ7/Qp8OxUd3LilrHgkVx+nDc+n
5Mv5S9vDKpavnTZumrzq384P1+vbuR6+0L+eb0nux/XvgO/QKcfq98XPN5xt
VMrPizOL9Ds+s58H/eqDzwwAAACgLay1fNCkD3roB9NnMPuEhjWgJu4ze84+
g80nYeVedn0bm58h0Zcjc/p1VntMX4jpXxF8ZqadsTpcO5N8ZrYNIin6WKcP
eXmGg+XrnxmduL1wvdr+xgv9K/rM/H70P+b0Y8hn9jT7Xfd1ieNftSPS7/jM
fh70qw8+MwAAAIC2sNbyQZM+6KIfljgs39cS35tp7HMzyxiGxX/j+jKkWK+l
jqif5WHtBzxjoeY9l6d9x3Fr75y8309DsjNLB7UJij7m8dDe2FicXER/jaUN
jt1ivQE7Nd1EXN/eFvv10PpR8wUq5RxtkvZUuuNnb7c4/uW9mX75ip05cYGd
0cWcdGPQrz5ZvwVAMt+St6QFV/PGtCYnL41G7LkGnxgPue2qlUdoobc8Ub3Z
81b0tVcVtrUac14d3jVP1sjHxfddGqxhfdCkD36mH5x4rW65i5290aluafGF
YPIzc1Ij0K8++1r5epxyGVXvz3vjA7GxuXq21l8uX88b80my89JoaP3+oVjp
au26SG95olLsYV5a6W0+yeXdeeTr1vueebJaPq4v2AvSGtawPmjSB1/fD1b8
zWfXREHuYmdv9KibEjcJaXz9nNQY9KvP6TMbvTweM9ozD6XjoXwjElfy5Gjk
5Glxyx8GJfdNMC/NnpdlOOdpt73CPcT1/DNm3hW5nJCeEmV5ikrskfPGqPoE
8vlkxYyr7cqPvwmOt5J7yj1WZ1jjy+ccS2cduXmBlHYl5EdKGbdX8kTl9peG
pH+tvFVZ10Wwv5TxpumfOs6tnFLOfoWUdVmibyOkgzb+zc/Yz+JInPcqjv9U
+9U9QJu275hXZfR50i8n/H0kt7dyPi7lWco5ecy+HdawPmjSB/QDAPQEc1IZ
6Fef4/7m78969qK9V/987c/elI6H8oFo5OTJSSLl2Y9W+cZv+bl5aaxcKEJb
hGdCyrppTZHzroTKqRIPkfLM1SJ79PxCuj5ynpwsH2RkXF2Kx5LGW2EcxqLD
/lwO4TmwuXmB5HYpeYcEO3Ov91CeqFyfcRRL/3p5q3KvC7G/guNN0184rpWz
9dP+HJDHmDh+a8aZOeNfepbIlXmv1viX7A/Zo43PlvOqjvJ9qpWjfB/F9K+W
j0s6XilP3bfAGtYHTfqAfgCAnmBOKgP96nP4zIw1srXWFhb1ej6TtHwjblmp
eXICheTladH2u+fmpZnrFXQzy/N8Dxl+Ai3vSqgcOe+KG08QydOSmafokj3C
Pdm1PDnGGbF7slo+s9h4q+Az2/vhiD9yfbwZeYFUn5mmZ/K4LcsTZffXOkaT
/BKq/vXyVl26Ltz+ivnMQnmfrEOBeWmOD178ZRkxPBd9ZocOgfG/+rvmWCd7
jrk071UY/5L9qfaY4zOUzyq13ks+M8l3FfKZZXyPe+WK9Wbk4xKP18hT9z2w
hvVBkz6gHwCgJ5iTykC/+ri/Pwf3gPyF91ip+UZCZObJiZaRmKfF3ccV2ps5
k5SfZG9rIG9J7t40Ke9KsJzc/fNFeYqu2RPKG5OVJ+dCTusqezO18ab1e04e
m+Pclw3TWs84TV4caNq+RqVdqXpGxm3oek+6XkwRFpvS46Qk/bPtSa0jdF1E
+kscb5r+qXmr3Otx88/F/WAXcgBIOkTG//Bq/15P9rxXdfwr9mv2RMdnu3lV
LiJxnjyFkb+PtPbWyscVmd+y+uvLmbUBGzTpA/oBAHqCOakM9KvPvsaFC7z5
t/Pe8q70Zs/P0GleoBJSYncAFr5w/Feh11gu+uuAtZYPmvQB/QAAPcGcVAb6
1Qef2VXM3+gb5mjpLe9Kb/b8Ej3mBQJ4F4z/AG/6PsqB/vJgreWDJn1APwBA
TzAnlYF+9cFnBgAAANAW1lo+aNIH9AMA9ARzUhnoVx98ZgAAAABtYa3lgyZ9
8Ol+yMpj81HCzwU9njHaiP1Zk9nPskjKGX7hmaedoelzWbeGWDmtM3MaFZOY
Qz70+dZbjT49J90d9KsPPjMAAACAtrDW8kGTPvh8P8Rzo3eFknfnLc9mzch9
bX8sPXdOT76lbApz178LOaf9+0geDyL/ntPU1vrPz0n3Bv3qs/vM/gOCAEt5

               "], {{0, 579}, {1229, 0}}, {0, 255},
               ColorFunction->RGBColor],
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True],
              Selectable->False],
             BaseStyle->"ImageGraphics",
             ImageSizeRaw->{1229, 579},
             PlotRange->{{0, 1229}, {0, 579}}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Back\>\"", ",", " ", 
             RowBox[{
              RowBox[{"NotebookClose", "[", "]"}], ";", 
              RowBox[{"ToolMenu", "[", "]"}]}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"150", ",", "25"}], "}"}]}]}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PeriodicityToWordUsage", "[", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"TextCell", "[", "\"\<\>\"", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CompareScreenWordUsageToGender", "[", "]"}], " ", ":=", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"numAccountsWUToG", " ", "=", " ", "0"}], "}"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{"DocumentNotebook", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TextCell", "[", 
           RowBox[{"\"\<Word Usage - Gender\>\"", ",", "\"\<Title\>\""}], 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "option", " ", "for", " ", "add", " ", "to", " ", "database"}], 
            " ", "-", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"on", " ", "side"}], ")"}], " ", "slider", " ", "for", 
             " ", "how", " ", "many", " ", "users", " ", "to", " ", "add"}]}],
            " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Add to Database\>\"", ",", 
                RowBox[{
                 RowBox[{"NotebookClose", "[", "]"}], ";", 
                 RowBox[{"AddToDatabaseScreen", "[", 
                  RowBox[{"\"\<Facebook\>\"", ",", "numAccountsWUToG"}], 
                  "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "numAccountsWUToG", "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "20", ",", "1"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", "numAccountsWUToG", "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "button", " ", "to", " ", "go", " ", "to", " ", "current", " ", 
            "database"}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Current Database\>\"", ",", " ", 
             RowBox[{
              RowBox[{"NotebookClose", "[", "]"}], ";", " ", 
              RowBox[{"DatabaseScreen", "[", "]"}]}]}], "]"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "top", " ", "ten", " ", "\"\<strongest\>\"", "correlations", " ", 
            "in", " ", "panel", " ", "with", " ", "the", " ", "grid"}], " ", 
           "*)"}], " ", "\[IndentingNewLine]", 
          RowBox[{"(*", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TextCell", "[", "\[IndentingNewLine]", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "]"}], 
             "\[IndentingNewLine]", "]"}], ","}], "\[IndentingNewLine]", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Back\>\"", ",", " ", 
             RowBox[{
              RowBox[{"NotebookClose", "[", "]"}], ";", 
              RowBox[{"ToolMenu", "[", "]"}]}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"150", ",", "25"}], "}"}]}]}], "]"}], "]"}], ","}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "}"}], "]"}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DatabaseScreen", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{"DocumentNotebook", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TextCell", "[", 
           RowBox[{"\"\<View Database\>\"", ",", "\"\<Title\>\""}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Back\>\"", ",", " ", 
             RowBox[{
              RowBox[{"NotebookClose", "[", "]"}], ";", 
              RowBox[{"CompareScreenWordUsageToGender", "[", "]"}]}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"150", ",", "25"}], "}"}]}]}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"textPlane", "[", 
           RowBox[{
            RowBox[{"top", "[", 
             RowBox[{"\"\<Facebook\>\"", ",", "10"}], "]"}], ",", "10"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"wordGrid", "[", 
           RowBox[{"top", "[", 
            RowBox[{"\"\<Facebook\>\"", ",", "10"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Back\>\"", ",", " ", 
             RowBox[{
              RowBox[{"NotebookClose", "[", "]"}], ";", 
              RowBox[{"CompareScreenWordUsageToGender", "[", "]"}]}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"150", ",", "25"}], "}"}]}]}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AddToDatabaseScreen", "[", 
     RowBox[{"type_", ",", "numAccounts_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{"DocumentNotebook", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TextCell", "[", 
           RowBox[{"\"\<Add to Database\>\"", ",", " ", "\"\<Title\>\""}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Run\>\"", ",", " ", 
             RowBox[{"addToDatabase", "[", " ", 
              RowBox[{"\"\<Facebook\>\"", ",", "numAccounts"}], "]"}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"250", ",", "45"}], "}"}]}]}], "]"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Back\>\"", ",", " ", 
             RowBox[{
              RowBox[{"NotebookClose", "[", "]"}], ";", 
              RowBox[{"CompareScreenWordUsageToGender", "[", "]"}]}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"150", ",", "25"}], "}"}]}]}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CompareScreenPeriodicityToWordUsage", "[", "]"}], " ", ":=", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", "numAccountsPToWU", "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
       RowBox[{"DocumentNotebook", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TextCell", "[", 
           RowBox[{"\"\<Periodicity - Word Usage\>\"", ",", "\"\<Title\>\""}],
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{"\"\<Add to Database\>\"", ",", 
                RowBox[{
                 RowBox[{"NotebookClose", "[", "]"}], ";", 
                 RowBox[{"AddToDatabaseScreen", "[", 
                  RowBox[{
                  "numAccountsPToWU", ",", 
                   "\"\<Periodicity - Word Usage\>\""}], "]"}]}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Slider", "[", 
               RowBox[{
                RowBox[{"Dynamic", "[", "numAccountsPToWU", "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "100", ",", "1"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", "numAccountsPToWU", "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TextCell", "[", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Back\>\"", ",", " ", 
             RowBox[{
              RowBox[{"NotebookClose", "[", "]"}], ";", 
              RowBox[{"ToolMenu", "[", "]"}]}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "50"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"150", ",", "25"}], "}"}]}]}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PredictScreen", "[", "predictType_", "]"}], ":=", 
    RowBox[{"DynamicModule", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"word", "=", "\"\<\>\""}], ",", 
        RowBox[{"display", "=", "\"\<\>\""}]}], "}"}], "\[IndentingNewLine]", 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Dynamic", "[", 
        RowBox[{"display", "=", "\"\<\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CreateWindow", "[", "\[IndentingNewLine]", 
        RowBox[{"DocumentNotebook", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TextCell", "[", 
            RowBox[{"\"\<Predict Screen\>\"", ",", "\"\<Title\>\""}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{
            "\"\<Please enter in a word or emoticon you would like to predict \
a value of.\>\"", ",", " ", "\"\<Text\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{"InputField", "[", 
             RowBox[{
              RowBox[{"Dynamic", "[", "word", "]"}], ",", "String", ",", 
              RowBox[{
              "FieldHint", "\[Rule]", " ", 
               "\"\<Enter a phrase to be predicted\>\""}]}], "]"}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Run\>\"", ",", " ", 
             RowBox[{"display", "=", 
              RowBox[{"predict", "[", 
               RowBox[{"\"\<Facebook\>\"", ",", 
                RowBox[{"ToLowerCase", "[", "word", "]"}]}], "]"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"250", ",", "45"}], "}"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Panel", "[", 
            RowBox[{"Dynamic", "[", "display", "]"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"TextCell", "[", 
            RowBox[{"Button", "[", 
             RowBox[{"\"\<Back\>\"", ",", " ", 
              RowBox[{
               RowBox[{"NotebookClose", "[", "]"}], ";", 
               RowBox[{"ToolMenu", "[", "]"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"150", ",", "25"}], "}"}]}]}], "]"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}], "\[IndentingNewLine]", 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6090257201603775`*^9, 3.6090257210053773`*^9}, {
  3.6090434756031337`*^9, 3.6090436125911336`*^9}, {3.609050078914406*^9, 
  3.609050097262406*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FinalProject", "[", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6090499897934055`*^9, 3.6090499958124056`*^9}, 
   3.609050102365406*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{667, 690},
WindowMargins->{{243, Automatic}, {Automatic, 141}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 96, 1, 101, "Title"],
Cell[678, 25, 127, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[830, 32, 160, 2, 86, "Section"],
Cell[993, 36, 239, 5, 49, "Text"],
Cell[1235, 43, 3901, 98, 332, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[5173, 146, 228, 5, 56, "Section"],
Cell[5404, 153, 1308, 25, 258, "Text"],
Cell[6715, 180, 12216, 266, 1432, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[18968, 451, 151, 2, 56, "Section"],
Cell[19122, 455, 2569, 57, 486, "Text"],
Cell[21694, 514, 20868, 472, 2072, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[42599, 991, 404, 7, 56, "Section"],
Cell[43006, 1000, 363, 6, 49, "Text"],
Cell[43372, 1008, 18156, 404, 2012, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61565, 1417, 210, 3, 86, "Section"],
Cell[61778, 1422, 23004, 606, 2270, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[84819, 2033, 163, 2, 56, "Section"],
Cell[84985, 2037, 11962, 286, 1286, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[96984, 2328, 238, 5, 56, "Section"],
Cell[97225, 2335, 1036, 25, 152, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[98298, 2365, 109, 1, 56, "Section"],
Cell[98410, 2368, 121048, 2148, 4656, "Input"],
Cell[219461, 4518, 174, 4, 31, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
